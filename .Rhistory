library(glmnet)
library(tidytext)
library(flextable)
library(skimr)
library(RColorBrewer)
library(lubridate)
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
opts <- options(knitr.kable.NA = "")
`%out%` <- Negate(`%in%`)
# disabling scientific notation
options(scipen = 999)
theme_set(theme_light())
nat <- pin %>%
mutate(state = recode(state,
"Bago (East)" = "Bago",
"Bago (West)" = "Bago",
"Shan (North)" = "Shan",
"Shan (East)" = "Shan",
"Shan (South)" = "Shan")) %>%
left_join(idps %>%
select(admin3_pcode = township_pcode,
IDPs = id_ps,
population),
by = "admin3_pcode") %>%
left_join(r4 %>% select(state,
insecure_pc,
insecure_persons),
by = "state")  %>%
select(state, township,
vul_score = mdp_adjust,
conflict_score,
insecure_pc,
insecure_persons,
IDPs,
population,
admin3_pcode) %>%
mutate(population = ifelse(township == "Hlaingtharya",
819886, population)) %>%
replace_na(list(IDPs = 0)) %>%
mutate_at(vars(insecure_pc),
~ as.double(str_remove_all(.x, "\\%"))) %>%
mutate_at(vars(conflict_score, vul_score),
~ range_wna(scale(.))) %>%
mutate(conflict_affected = conflict_score * population,
pre_ex_vulnerable = vul_score * population) %>%
mutate(vul_pop = pmax(vul_score *  population, conflict_score * population, na.rm = TRUE),
vul_pop_score = pmax(vul_score, conflict_score, na.rm = TRUE),
caseload = vul_pop + IDPs) %>%
group_by(state) %>%
mutate(caseload_pc = caseload / sum(caseload, na.rm = TRUE),
PIN = population / sum(population) * insecure_persons + IDPs,
pc_pin = PIN / sum(PIN, na.rm = TRUE)) %>%
ungroup() %>%
mutate(pc_pop = PIN / population) %>%
do.call(data.frame, .) %>%
as_tibble()
tbl %>%
mutate_at(vars(vul_score, conflict_score,
vul_pop_score, caseload_pc,
pc_pin, pc_pop),
~ round(.x * 100, digits = 2)) %>%
mutate_at(vars(insecure_persons, IDPs, population,
vul_pop, caseload, PIN,
conflict_affected,
pre_ex_vulnerable),
~ round(.x)) %>%
select(township,
population,
`conflict score` = conflict_score,
`conflict affected` = conflict_affected,
`vulnerability score` = vul_score,
`pre-ex vulnerable` = pre_ex_vulnerable,
IDPs,
PIN
) %>%
mutate(`%_PIN` = round(PIN / sum(PIN),
digits = 2)) %>%
arrange(desc(PIN)) %>%
adorn_totals("row") %>%
mutate(`%_pop` = round(PIN / population * 100,
digits = 2)) %>%
mutate(`%_PIN` = ifelse(township == "Total", 100, PIN)) %>%
flextable() %>%
set_caption("Proposed PIN breakdown by township") %>%
theme_zebra() %>%
fontsize(size = 10, part = "all")
nat_table <- function(tbl){
tbl %>%
mutate_at(vars(vul_score, conflict_score,
vul_pop_score, caseload_pc,
pc_pin, pc_pop),
~ round(.x * 100, digits = 2)) %>%
mutate_at(vars(insecure_persons, IDPs, population,
vul_pop, caseload, PIN,
conflict_affected,
pre_ex_vulnerable),
~ round(.x)) %>%
select(township,
population,
`conflict score` = conflict_score,
`conflict affected` = conflict_affected,
`vulnerability score` = vul_score,
`pre-ex vulnerable` = pre_ex_vulnerable,
IDPs,
PIN
) %>%
mutate(`%_PIN` = round(PIN / sum(PIN),
digits = 2)) %>%
arrange(desc(PIN)) %>%
adorn_totals("row") %>%
mutate(`%_pop` = round(PIN / population * 100,
digits = 2)) %>%
mutate(`%_PIN` = ifelse(township == "Total", 100, PIN)) %>%
flextable() %>%
set_caption("Proposed PIN breakdown by township") %>%
theme_zebra() %>%
fontsize(size = 10, part = "all")
}
nat %>%
filter(state == "Ayeyarwady") %>%
nat_table()
nat %>%
filter(state == "Rakhine") %>%
nat_table()
nat %>%
filter(state == "Sagaing") %>%
nat_table()
nat %>%
filter(state == "Yangon") %>%
nat_table()
nat %>%
filter(state == "Chin") %>%
nat_table()
nat %>%
filter(state == "Ayeyarwady") %>%
nat_table()
nat %>%
filter(state == "Shan") %>%
nat_table()
nat %>%
filter(state == "Mon") %>%
nat_table()
nat %>%
filter(state == "Mandalay") %>%
nat_table()
nat %>%
filter(state == "Mandalay") %>%
nat_table()
nat %>%
filter(state == "Magway") %>%
nat_table()
nat %>%
filter(state == "Kayin") %>%
nat_table()
nat %>%
filter(state == "Kayah") %>%
nat_table()
nat %>%
filter(state == "Kachin") %>%
nat_table()
nat %>%
filter(state == "Rakhine") %>%
nat_table()
nat %>%
filter(state == "Chin") %>%
nat_table()
nat %>%
filter(state == "Bago") %>%
nat_table()
nat %>%
filter(state == "Ayeyarwady") %>%
nat_table()
nat <- pin %>%
mutate(state = recode(state,
"Bago (East)" = "Bago",
"Bago (West)" = "Bago",
"Shan (North)" = "Shan",
"Shan (East)" = "Shan",
"Shan (South)" = "Shan")) %>%
left_join(idps %>%
select(admin3_pcode = township_pcode,
IDPs = id_ps,
population),
by = "admin3_pcode") %>%
left_join(r4 %>% select(state,
insecure_pc,
insecure_persons),
by = "state")  %>%
select(state, township,
vul_score = mdp_adjust,
conflict_score,
insecure_pc,
insecure_persons,
IDPs,
population,
admin3_pcode) %>%
mutate(population = ifelse(township == "Hlaingtharya",
819886, population)) %>%
replace_na(list(IDPs = 0)) %>%
mutate_at(vars(insecure_pc),
~ as.double(str_remove_all(.x, "\\%"))) %>%
mutate_at(vars(conflict_score, vul_score),
~ range_wna(scale(.))) %>%
mutate(conflict_affected = conflict_score * population,
pre_ex_vulnerable = vul_score * population) %>%
mutate(vul_pop = pmax(vul_score *  population, conflict_score * population, na.rm = TRUE),
vul_pop_score = pmax(vul_score, conflict_score, na.rm = TRUE),
caseload = vul_pop + IDPs) %>%
group_by(state) %>%
mutate(caseload_pc = caseload / sum(caseload, na.rm = TRUE),
PIN = population / sum(population) * insecure_persons + IDPs,
pc_pin = PIN / sum(PIN, na.rm = TRUE)) %>%
ungroup() %>%
mutate(pc_pop = PIN / population) %>%
do.call(data.frame, .) %>%
as_tibble()
tbl %>%
mutate_at(vars(vul_score, conflict_score,
vul_pop_score, caseload_pc,
pc_pin, pc_pop),
~ round(.x * 100, digits = 2)) %>%
mutate_at(vars(insecure_persons, IDPs, population,
vul_pop, caseload, PIN,
conflict_affected,
pre_ex_vulnerable),
~ round(.x)) %>%
select(township,
population,
`conflict score` = conflict_score,
`conflict affected` = conflict_affected,
`vulnerability score` = vul_score,
`pre-ex vulnerable` = pre_ex_vulnerable,
IDPs,
PIN
) %>%
mutate(`%_PIN` = round(PIN / sum(PIN),
digits = 2)) %>%
arrange(desc(PIN)) %>%
adorn_totals("row") %>%
mutate(`%_pop` = round(PIN / population * 100,
digits = 2)) %>%
mutate(`%_PIN` = ifelse(township == "Total", 100, PIN)) %>%
flextable() %>%
set_caption("Proposed PIN breakdown by township") %>%
theme_zebra() %>%
fontsize(size = 10, part = "all")
nat_table <- function(tbl){
tbl %>%
mutate_at(vars(vul_score, conflict_score,
vul_pop_score, caseload_pc,
pc_pin, pc_pop),
~ round(.x * 100, digits = 2)) %>%
mutate_at(vars(insecure_persons, IDPs, population,
vul_pop, caseload, PIN,
conflict_affected,
pre_ex_vulnerable),
~ round(.x)) %>%
select(township,
population,
`conflict score` = conflict_score,
`conflict affected` = conflict_affected,
`vulnerability score` = vul_score,
`pre-ex vulnerable` = pre_ex_vulnerable,
IDPs,
PIN
) %>%
mutate(`%_PIN` = round(PIN / sum(PIN),
digits = 2)) %>%
arrange(desc(PIN)) %>%
adorn_totals("row") %>%
mutate(`%_pop` = round(PIN / population * 100,
digits = 2)) %>%
mutate(`%_PIN` = ifelse(township == "Total", 100, PIN)) %>%
flextable() %>%
set_caption("Proposed PIN breakdown by township") %>%
theme_zebra() %>%
fontsize(size = 10, part = "all")
}
nat %>%
filter(state == "Ayeyarwady") %>%
nat_table()
nat %>%
filter(state == "Ayeyarwady") %>%
mutate(`%_PIN` = round(PIN / sum(PIN),
digits = 2))
nat_table <- function(tbl){
tbl %>%
mutate_at(vars(vul_score, conflict_score,
vul_pop_score, caseload_pc,
pc_pin, pc_pop),
~ round(.x * 100, digits = 2)) %>%
mutate_at(vars(insecure_persons, IDPs, population,
vul_pop, caseload, PIN,
conflict_affected,
pre_ex_vulnerable),
~ round(.x)) %>%
select(township,
population,
`conflict score` = conflict_score,
`conflict affected` = conflict_affected,
`vulnerability score` = vul_score,
`pre-ex vulnerable` = pre_ex_vulnerable,
IDPs,
PIN
) %>%
mutate(`%_PIN` = round(PIN / sum(PIN) * 100,
digits = 2)) %>%
arrange(desc(PIN)) %>%
adorn_totals("row") %>%
mutate(`%_pop` = round(PIN / population * 100,
digits = 2)) %>%
mutate(`%_PIN` = ifelse(township == "Total", 100, PIN)) %>%
flextable() %>%
set_caption("Proposed PIN breakdown by township") %>%
theme_zebra() %>%
fontsize(size = 10, part = "all")
}
nat %>%
filter(state == "Ayeyarwady") %>%
nat_table()
nat %>%
filter(state == "Ayeyarwady") %>%
mutate_at(vars(vul_score, conflict_score,
vul_pop_score, caseload_pc,
pc_pin, pc_pop),
~ round(.x * 100, digits = 2)) %>%
mutate_at(vars(insecure_persons, IDPs, population,
vul_pop, caseload, PIN,
conflict_affected,
pre_ex_vulnerable),
~ round(.x)) %>%
select(township,
population,
`conflict score` = conflict_score,
`conflict affected` = conflict_affected,
`vulnerability score` = vul_score,
`pre-ex vulnerable` = pre_ex_vulnerable,
IDPs,
PIN
) %>%
mutate(`%_PIN` = round(PIN / sum(PIN) * 100,
digits = 2)) %>%
arrange(desc(PIN)) %>%
adorn_totals("row") %>%
mutate(`%_pop` = round(PIN / population * 100,
digits = 2)) %>%
mutate(`%_PIN` = ifelse(township == "Total", 100, PIN)) %>%
flextable() %>%
set_caption("Proposed PIN breakdown by township") %>%
theme_zebra() %>%
fontsize(size = 10, part = "all")
mutate(`%_PIN` = (PIN / sum(PIN) * 100) %>%
nat %>%
filter(state == "Ayeyarwady") %>%
mutate_at(vars(vul_score, conflict_score,
vul_pop_score, caseload_pc,
pc_pin, pc_pop),
~ round(.x * 100, digits = 2)) %>%
mutate_at(vars(insecure_persons, IDPs, population,
vul_pop, caseload, PIN,
conflict_affected,
pre_ex_vulnerable),
~ round(.x)) %>%
select(township,
population,
`conflict score` = conflict_score,
`conflict affected` = conflict_affected,
`vulnerability score` = vul_score,
`pre-ex vulnerable` = pre_ex_vulnerable,
IDPs,
PIN
) %>%
mutate(`%_PIN` = (PIN / sum(PIN) * 100)) %>%
arrange(desc(PIN)) %>%
adorn_totals("row") %>%
mutate(`%_pop` = round(PIN / population * 100,
digits = 2)) %>%
mutate(`%_PIN` = ifelse(township == "Total", 100, PIN)) %>%
flextable() %>%
set_caption("Proposed PIN breakdown by township") %>%
theme_zebra() %>%
fontsize(size = 10, part = "all")
nat %>%
nat %>%
filter(state == "Ayeyarwady") %>%
mutate_at(vars(vul_score, conflict_score,
vul_pop_score, caseload_pc,
pc_pin, pc_pop),
~ round(.x * 100, digits = 2)) %>%
mutate_at(vars(insecure_persons, IDPs, population,
vul_pop, caseload, PIN,
conflict_affected,
pre_ex_vulnerable),
~ round(.x)) %>%
select(township,
population,
`conflict score` = conflict_score,
`conflict affected` = conflict_affected,
`vulnerability score` = vul_score,
`pre-ex vulnerable` = pre_ex_vulnerable,
IDPs,
PIN
) %>%
mutate(`%_PIN` = (PIN / sum(PIN) * 100)) %>%
arrange(desc(PIN)) %>%
adorn_totals("row") %>%
mutate(`%_pop` = round(PIN / population * 100,
digits = 2)) %>%
mutate(`%_PIN` = ifelse(township == "Total", 100, PIN)) %>%
flextable() %>%
set_caption("Proposed PIN breakdown by township") %>%
theme_zebra() %>%
fontsize(size = 10, part = "all")
nat %>%
filter(state == "Ayeyarwady") %>%
mutate_at(vars(vul_score, conflict_score,
vul_pop_score, caseload_pc,
pc_pin, pc_pop),
~ round(.x * 100, digits = 2)) %>%
mutate_at(vars(insecure_persons, IDPs, population,
vul_pop, caseload, PIN,
conflict_affected,
pre_ex_vulnerable),
~ round(.x)) %>%
select(township,
population,
`conflict score` = conflict_score,
`conflict affected` = conflict_affected,
`vulnerability score` = vul_score,
`pre-ex vulnerable` = pre_ex_vulnerable,
IDPs,
PIN
) %>%
ungroup() %>%
mutate(`%_PIN` = (PIN / sum(PIN) * 100)) %>%
arrange(desc(PIN)) %>%
adorn_totals("row") %>%
mutate(`%_pop` = round(PIN / population * 100,
digits = 2)) %>%
mutate(`%_PIN` = ifelse(township == "Total", 100, PIN)) %>%
flextable() %>%
set_caption("Proposed PIN breakdown by township") %>%
theme_zebra() %>%
fontsize(size = 10, part = "all")
nat %>%
filter(state == "Ayeyarwady") %>%
mutate_at(vars(vul_score, conflict_score,
vul_pop_score, caseload_pc,
pc_pin, pc_pop),
~ round(.x * 100, digits = 2)) %>%
mutate_at(vars(insecure_persons, IDPs, population,
vul_pop, caseload, PIN,
conflict_affected,
pre_ex_vulnerable),
~ round(.x)) %>%
select(township,
population,
`conflict score` = conflict_score,
`conflict affected` = conflict_affected,
`vulnerability score` = vul_score,
`pre-ex vulnerable` = pre_ex_vulnerable,
IDPs,
PIN
) %>%
ungroup() %>%
mutate(`%_PIN` = (PIN / sum(PIN) * 100))
nat %>%
filter(state == "Ayeyarwady") %>%
nat_table()
nat_table <- function(tbl){
tbl %>%
mutate_at(vars(vul_score, conflict_score,
vul_pop_score, caseload_pc,
pc_pin, pc_pop),
~ round(.x * 100, digits = 2)) %>%
mutate_at(vars(insecure_persons, IDPs, population,
vul_pop, caseload, PIN,
conflict_affected,
pre_ex_vulnerable),
~ round(.x)) %>%
select(township,
population,
`conflict score` = conflict_score,
`conflict affected` = conflict_affected,
`vulnerability score` = vul_score,
`pre-ex vulnerable` = pre_ex_vulnerable,
IDPs,
PIN
) %>%
mutate(`%_PIN` = round(PIN / sum(PIN) * 100,
digits = 2)) %>%
arrange(desc(PIN)) %>%
adorn_totals("row") %>%
mutate(`%_pop` = round(PIN / population * 100,
digits = 2)) %>%
mutate(`%_PIN` = ifelse(township == "Total", 100, `%_PIN`)) %>%
flextable() %>%
set_caption("Proposed PIN breakdown by township") %>%
theme_zebra() %>%
fontsize(size = 10, part = "all")
}
nat %>%
filter(state == "Ayeyarwady") %>%
nat_table()
nat %>%
filter(state == "Yangon") %>%
nat_table()
