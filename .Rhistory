~ round(.x * 100, digits = 2)) %>%
mutate_at(vars(insecure_persons, IDPs, population,
vul_pop, caseload, PIN,
conflict_affected,
pre_ex_vulnerable),
~ round(.x)) %>%
select(township,
population,
`conflict score` = conflict_score,
`conflict affected` = conflict_affected,
`vulnerability score` = vul_score,
`pre-ex vulnerable` = pre_ex_vulnerable,
IDPs,
PIN
) %>%
mutate(`%_PIN` = round(PIN / sum(PIN),
digits = 2)) %>%
arrange(desc(PIN)) %>%
adorn_totals("row") %>%
mutate(`%_pop` = round(PIN / population * 100,
digits = 2)) %>%
mutate(`%_PIN` = ifelse(township == "Total", 100, PIN)) %>%
flextable() %>%
set_caption("Proposed PIN breakdown by township") %>%
theme_zebra() %>%
fontsize(size = 10, part = "all")
}
nat %>%
filter(state == "Ayeyarwady") %>%
nat_table()
nat %>%
filter(state == "Ayeyarwady") %>%
mutate(`%_PIN` = round(PIN / sum(PIN),
digits = 2))
nat_table <- function(tbl){
tbl %>%
mutate_at(vars(vul_score, conflict_score,
vul_pop_score, caseload_pc,
pc_pin, pc_pop),
~ round(.x * 100, digits = 2)) %>%
mutate_at(vars(insecure_persons, IDPs, population,
vul_pop, caseload, PIN,
conflict_affected,
pre_ex_vulnerable),
~ round(.x)) %>%
select(township,
population,
`conflict score` = conflict_score,
`conflict affected` = conflict_affected,
`vulnerability score` = vul_score,
`pre-ex vulnerable` = pre_ex_vulnerable,
IDPs,
PIN
) %>%
mutate(`%_PIN` = round(PIN / sum(PIN) * 100,
digits = 2)) %>%
arrange(desc(PIN)) %>%
adorn_totals("row") %>%
mutate(`%_pop` = round(PIN / population * 100,
digits = 2)) %>%
mutate(`%_PIN` = ifelse(township == "Total", 100, PIN)) %>%
flextable() %>%
set_caption("Proposed PIN breakdown by township") %>%
theme_zebra() %>%
fontsize(size = 10, part = "all")
}
nat %>%
filter(state == "Ayeyarwady") %>%
nat_table()
nat %>%
filter(state == "Ayeyarwady") %>%
mutate_at(vars(vul_score, conflict_score,
vul_pop_score, caseload_pc,
pc_pin, pc_pop),
~ round(.x * 100, digits = 2)) %>%
mutate_at(vars(insecure_persons, IDPs, population,
vul_pop, caseload, PIN,
conflict_affected,
pre_ex_vulnerable),
~ round(.x)) %>%
select(township,
population,
`conflict score` = conflict_score,
`conflict affected` = conflict_affected,
`vulnerability score` = vul_score,
`pre-ex vulnerable` = pre_ex_vulnerable,
IDPs,
PIN
) %>%
mutate(`%_PIN` = round(PIN / sum(PIN) * 100,
digits = 2)) %>%
arrange(desc(PIN)) %>%
adorn_totals("row") %>%
mutate(`%_pop` = round(PIN / population * 100,
digits = 2)) %>%
mutate(`%_PIN` = ifelse(township == "Total", 100, PIN)) %>%
flextable() %>%
set_caption("Proposed PIN breakdown by township") %>%
theme_zebra() %>%
fontsize(size = 10, part = "all")
mutate(`%_PIN` = (PIN / sum(PIN) * 100) %>%
nat %>%
filter(state == "Ayeyarwady") %>%
mutate_at(vars(vul_score, conflict_score,
vul_pop_score, caseload_pc,
pc_pin, pc_pop),
~ round(.x * 100, digits = 2)) %>%
mutate_at(vars(insecure_persons, IDPs, population,
vul_pop, caseload, PIN,
conflict_affected,
pre_ex_vulnerable),
~ round(.x)) %>%
select(township,
population,
`conflict score` = conflict_score,
`conflict affected` = conflict_affected,
`vulnerability score` = vul_score,
`pre-ex vulnerable` = pre_ex_vulnerable,
IDPs,
PIN
) %>%
mutate(`%_PIN` = (PIN / sum(PIN) * 100)) %>%
arrange(desc(PIN)) %>%
adorn_totals("row") %>%
mutate(`%_pop` = round(PIN / population * 100,
digits = 2)) %>%
mutate(`%_PIN` = ifelse(township == "Total", 100, PIN)) %>%
flextable() %>%
set_caption("Proposed PIN breakdown by township") %>%
theme_zebra() %>%
fontsize(size = 10, part = "all")
nat %>%
nat %>%
filter(state == "Ayeyarwady") %>%
mutate_at(vars(vul_score, conflict_score,
vul_pop_score, caseload_pc,
pc_pin, pc_pop),
~ round(.x * 100, digits = 2)) %>%
mutate_at(vars(insecure_persons, IDPs, population,
vul_pop, caseload, PIN,
conflict_affected,
pre_ex_vulnerable),
~ round(.x)) %>%
select(township,
population,
`conflict score` = conflict_score,
`conflict affected` = conflict_affected,
`vulnerability score` = vul_score,
`pre-ex vulnerable` = pre_ex_vulnerable,
IDPs,
PIN
) %>%
mutate(`%_PIN` = (PIN / sum(PIN) * 100)) %>%
arrange(desc(PIN)) %>%
adorn_totals("row") %>%
mutate(`%_pop` = round(PIN / population * 100,
digits = 2)) %>%
mutate(`%_PIN` = ifelse(township == "Total", 100, PIN)) %>%
flextable() %>%
set_caption("Proposed PIN breakdown by township") %>%
theme_zebra() %>%
fontsize(size = 10, part = "all")
nat %>%
filter(state == "Ayeyarwady") %>%
mutate_at(vars(vul_score, conflict_score,
vul_pop_score, caseload_pc,
pc_pin, pc_pop),
~ round(.x * 100, digits = 2)) %>%
mutate_at(vars(insecure_persons, IDPs, population,
vul_pop, caseload, PIN,
conflict_affected,
pre_ex_vulnerable),
~ round(.x)) %>%
select(township,
population,
`conflict score` = conflict_score,
`conflict affected` = conflict_affected,
`vulnerability score` = vul_score,
`pre-ex vulnerable` = pre_ex_vulnerable,
IDPs,
PIN
) %>%
ungroup() %>%
mutate(`%_PIN` = (PIN / sum(PIN) * 100)) %>%
arrange(desc(PIN)) %>%
adorn_totals("row") %>%
mutate(`%_pop` = round(PIN / population * 100,
digits = 2)) %>%
mutate(`%_PIN` = ifelse(township == "Total", 100, PIN)) %>%
flextable() %>%
set_caption("Proposed PIN breakdown by township") %>%
theme_zebra() %>%
fontsize(size = 10, part = "all")
nat %>%
filter(state == "Ayeyarwady") %>%
mutate_at(vars(vul_score, conflict_score,
vul_pop_score, caseload_pc,
pc_pin, pc_pop),
~ round(.x * 100, digits = 2)) %>%
mutate_at(vars(insecure_persons, IDPs, population,
vul_pop, caseload, PIN,
conflict_affected,
pre_ex_vulnerable),
~ round(.x)) %>%
select(township,
population,
`conflict score` = conflict_score,
`conflict affected` = conflict_affected,
`vulnerability score` = vul_score,
`pre-ex vulnerable` = pre_ex_vulnerable,
IDPs,
PIN
) %>%
ungroup() %>%
mutate(`%_PIN` = (PIN / sum(PIN) * 100))
nat %>%
filter(state == "Ayeyarwady") %>%
nat_table()
nat_table <- function(tbl){
tbl %>%
mutate_at(vars(vul_score, conflict_score,
vul_pop_score, caseload_pc,
pc_pin, pc_pop),
~ round(.x * 100, digits = 2)) %>%
mutate_at(vars(insecure_persons, IDPs, population,
vul_pop, caseload, PIN,
conflict_affected,
pre_ex_vulnerable),
~ round(.x)) %>%
select(township,
population,
`conflict score` = conflict_score,
`conflict affected` = conflict_affected,
`vulnerability score` = vul_score,
`pre-ex vulnerable` = pre_ex_vulnerable,
IDPs,
PIN
) %>%
mutate(`%_PIN` = round(PIN / sum(PIN) * 100,
digits = 2)) %>%
arrange(desc(PIN)) %>%
adorn_totals("row") %>%
mutate(`%_pop` = round(PIN / population * 100,
digits = 2)) %>%
mutate(`%_PIN` = ifelse(township == "Total", 100, `%_PIN`)) %>%
flextable() %>%
set_caption("Proposed PIN breakdown by township") %>%
theme_zebra() %>%
fontsize(size = 10, part = "all")
}
nat %>%
filter(state == "Ayeyarwady") %>%
nat_table()
nat %>%
filter(state == "Yangon") %>%
nat_table()
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(scales)
library(janitor)
library(haven)
library(psych)
library(skimr)
library(mdepriv)
library(broom)
library(readxl)
library(widyr)
library(DT)
library(viridis)
library(corrplot)
library(rpart)
library(rpart.utils)
library(rattle)
library(rpart.plot)
library(randomForest)
library(broomstick)
library(patchwork)
library(tidymodels)
library(vip)
library(glmnet)
library(tidytext)
library(flextable)
library(skimr)
library(RColorBrewer)
library(lubridate)
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
opts <- options(knitr.kable.NA = "")
`%out%` <- Negate(`%in%`)
# disabling scientific notation
options(scipen = 999)
theme_set(theme_light())
pcodes <- read_excel("./data/Myanmar PCodes Release_9.3_Jan2021_(StRgn_Dist_Tsp_Town_Ward_VT).xlsx",
sheet = "03_Township")
conflict_score <-  read_csv("./data/conflict_score_20220920.csv")
pin <- read_csv("./data/fs_pin.csv")
survey <- read_csv("./data/survey3.csv") %>%
mutate(rcsi =
r_csi_less_qlty * 1 +
r_csi_borrow * 2 +
r_csi_meal_nb * 1 +
r_csi_meal_size * 1 +
r_csi_meal_adult * 3,
rcsi_range = range_wna(rcsi))
msna <- read_csv("./data/msna.csv")
idps <- read_csv("./data/idps.csv") %>%
clean_names() %>%
filter(township != "Hlaingthayra (West)") %>%
mutate(township = recode(township,
"Hlaingthayra (Eastt)" = "Hlaingtharya"),
population = ifelse(township == "Hlaingtharya",
618275.809 + 201609.894,
population))
r4 <- read_csv("./data/round4_summary.csv") %>%
mutate(state = recode(state,
"Ayeyawady" = "Ayeyarwady"))
nat <- pin %>%
mutate(state = recode(state,
"Bago (East)" = "Bago",
"Bago (West)" = "Bago",
"Shan (North)" = "Shan",
"Shan (East)" = "Shan",
"Shan (South)" = "Shan")) %>%
left_join(idps %>%
select(admin3_pcode = township_pcode,
IDPs = id_ps,
population),
by = "admin3_pcode") %>%
left_join(r4 %>% select(state,
insecure_pc,
insecure_persons),
by = "state")  %>%
select(state, township,
vul_score = mdp_adjust,
conflict_score,
insecure_pc, insecure_persons,
IDPs,
population,
admin3_pcode) %>%
mutate(population = ifelse(township == "Hlaingtharya",
819886, population)) %>%
replace_na(list(IDPs = 0)) %>%
mutate_at(vars(insecure_pc),
~ as.double(str_remove_all(.x, "\\%"))) %>%
mutate_at(vars(conflict_score, vul_score),
~ range_wna(scale(.))) %>%
mutate(conflict_affected = conflict_score * population,
pre_ex_vulnerable = vul_score * population) %>%
mutate(vul_pop_score = pmax(vul_score, conflict_score, na.rm = TRUE),
vul_pop = vul_pop_score * population) %>%
group_by(state) %>%
mutate(vul_pop_pc = vul_pop / sum(vul_pop, na.rm = TRUE),
PIN = vul_pop_pc * insecure_persons + IDPs,
pc_pin = PIN / sum(PIN, na.rm = TRUE)) %>%
ungroup() %>%
mutate(pc_pop = PIN / population) %>%
do.call(data.frame, .) %>%
as_tibble()
nat_table <- function(tbl){
tbl %>%
mutate_at(vars(vul_score, conflict_score,
vul_pop_score,
pc_pin, pc_pop),
~ round(.x * 100, digits = 2)) %>%
mutate_at(vars(insecure_persons, IDPs, population,
vul_pop, PIN,
conflict_affected,
pre_ex_vulnerable),
~ round(.x)) %>%
select(township,
population,
`conflict score` = conflict_score,
`conflict affected` = conflict_affected,
`vulnerability score` = vul_score,
`pre-ex vulnerable` = pre_ex_vulnerable,
IDPs,
PIN
) %>%
mutate(`%_PIN` = round(PIN / sum(PIN),
digits = 2)) %>%
arrange(desc(PIN)) %>%
adorn_totals("row") %>%
mutate(`%_pop` = round(PIN / population * 100,
digits = 2)) %>%
mutate(`%_PIN` = ifelse(township == "Total", 100, `%_PIN`)) %>%
flextable() %>%
set_caption("Proposed PIN breakdown by township") %>%
theme_zebra() %>%
fontsize(size = 10, part = "all")
}
nat %>%
write_csv("./data/draft_pin_datasect_conflict_vulnerability.csv")
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(scales)
library(janitor)
library(haven)
library(psych)
library(skimr)
library(mdepriv)
library(broom)
library(readxl)
library(widyr)
library(DT)
library(viridis)
library(corrplot)
library(rpart)
library(rpart.utils)
library(rattle)
library(rpart.plot)
library(randomForest)
library(broomstick)
library(patchwork)
library(tidymodels)
library(vip)
library(glmnet)
library(tidytext)
library(flextable)
library(skimr)
library(RColorBrewer)
library(lubridate)
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
opts <- options(knitr.kable.NA = "")
`%out%` <- Negate(`%in%`)
# disabling scientific notation
options(scipen = 999)
theme_set(theme_light())
pcodes <- read_excel("./data/Myanmar PCodes Release_9.3_Jan2021_(StRgn_Dist_Tsp_Town_Ward_VT).xlsx",
sheet = "03_Township")
conflict_score <-  read_csv("./data/conflict_score_20220920.csv")
pin <- read_csv("./data/fs_pin.csv")
survey <- read_csv("./data/survey3.csv") %>%
mutate(rcsi =
r_csi_less_qlty * 1 +
r_csi_borrow * 2 +
r_csi_meal_nb * 1 +
r_csi_meal_size * 1 +
r_csi_meal_adult * 3,
rcsi_range = range_wna(rcsi))
msna <- read_csv("./data/msna.csv")
idps <- read_csv("./data/idps.csv") %>%
clean_names() %>%
filter(township != "Hlaingthayra (West)") %>%
mutate(township = recode(township,
"Hlaingthayra (Eastt)" = "Hlaingtharya"),
population = ifelse(township == "Hlaingtharya",
618275.809 + 201609.894,
population))
r4 <- read_csv("./data/round4_summary.csv") %>%
mutate(state = recode(state,
"Ayeyawady" = "Ayeyarwady"))
read_excel("./data/MMR 2023 HPC - FSC PiN 2022 - for submission.xlsx")
read_excel("./data/MMR 2023 HPC - FSC PiN 2022 - for submission.xlsx") %>%
clean_names()
sub_pin <- read_excel("./data/MMR 2023 HPC - FSC PiN 2022 - for submission.xlsx") %>%
clean_names()
sub <- read_excel("./data/MMR 2023 HPC - FSC PiN 2022 - for submission.xlsx") %>%
clean_names()
sub %>% glimpse()
sub %>%
mutate(pin = total_pi_n_2022,
pc_pin = pin / sum(pin, na.rm = TRUE)) %>%
filter(state_region == "Ayeyarwady") %>%
select(township, pin, pc_pin)
sub %>%
mutate(pin = total_pi_n_2022) %>%
group_by(state_region) %>%
mutate(pc_pin = pin / sum(pin, na.rm = TRUE)) %>%
filter(state_region == "Ayeyarwady") %>%
select(township, pin, pc_pin)
sub %>% glimpse()
sub %>%
mutate(pin = total_pi_n_2022) %>%
group_by(state_region) %>%
mutate(pc_pin = pin / sum(pin, na.rm = TRUE),
pc_pop = population_2022_projected / sum(population_2022_projected, na.rm =TRUE)) %>%
filter(state_region == "Ayeyarwady") %>%
select(township, pin, pc_pin, population = population_2022_projected, pc_pop)
sub <- read_excel("./data/MMR 2023 HPC - FSC PiN 2022 - for submission.xlsx") %>%
clean_names() %>%
filter(!is.na(state_region))
sub %>%
mutate(pin = total_pi_n_2022,) %>%
group_by(state_region) %>%
mutate(pc_pin = pin / sum(pin, na.rm = TRUE),
pc_pop = population_2022_projected / sum(population_2022_projected, na.rm =TRUE)) %>%
filter(state_region == "Ayeyarwady") %>%
select(township, pin, pc_pin, population = population_2022_projected, pc_pop)
sub %>%
mutate(pin = total_pi_n_2022) %>%
group_by(state_region) %>%
mutate(pc_pin = pin / sum(pin, na.rm = TRUE),
pc_pop = population_2022_projected / sum(population_2022_projected, na.rm =TRUE)) %>%
filter(state_region == "Ayeyarwady") %>%
select(township, pin, pc_pin, population = population_2022_projected, pc_pop)
sub %>%
mutate(pin = total_pi_n_2022,
population = parse_number(population_2022_projected)) %>%
group_by(state_region) %>%
mutate(pc_pin = pin / sum(pin, na.rm = TRUE),
pc_pop = population / sum(population, na.rm =TRUE)) %>%
filter(state_region == "Ayeyarwady") %>%
select(township, pin, pc_pin, population, pc_pop)
