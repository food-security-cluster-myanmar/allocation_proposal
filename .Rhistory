select(state, domain, final_weight) %>%
pivot_wider(names_from = domain,
values_from = final_weight,
values_fill = 0) %>%
mutate(insecure = moderately_insecure + severely_insecure,
food_secure = secure + marginally_secure,
pc = insecure / (food_secure + insecure))
states %>%
filter(!is.na(domain)) %>%
select(state, domain, final_weight) %>%
pivot_wider(names_from = domain,
values_from = final_weight,
values_fill = 0) %>%
mutate(insecure = moderately_insecure + severely_insecure,
food_secure = secure + marginally_secure,
pc = insecure / (food_secure + insecure)) %>%
arrange(desc(pc))
states %>%
filter(!is.na(domain)) %>%
select(state, domain, final_weight) %>%
pivot_wider(names_from = domain,
values_from = final_weight,
values_fill = 0) %>%
mutate(insecure = moderately_insecure + severely_insecure,
food_secure = secure + marginally_secure,
pc = insecure / (food_secure + insecure)) %>%
arrange(desc(pc)) %>% pull(state)
states %>%
ggplot(aes(y = state_pc,
x = fct_relevel(state, c("Kayah", "Chin", "Magway", "Shan", "Kayin",
"Rakhine", "Mon", "Mandalay", "Ayeyarwady",
"Tanintharyi", "Yangon", "Kachin", "Sagaing", "Bago")),
fill = fct_relevel(domain,  c("secure",
"marginally_secure",
"moderately_insecure",
"severely_insecure")))) +
geom_col(position = position_stack()) +
geom_text(aes(label = state_pc),
position = position_stack(vjust = .5),
size = 2) +
scale_fill_manual(values = c("#4DB6AC",
"#80CBC4",
"#F57F17",
"#BF360C")) +
labs(fill = "",
x = "",
y = "Percentage of population",
title = "CARI domains by state",
subtitle = "Combination of MSNA and FAO/WFP Round 3") +
theme(legend.text = element_text(size = 5),
axis.text.x = element_text(angle = 60,
hjust = 1,
vjust = 1))
states %>%
filter(state != "Nay Pyi Taw") %>%
ggplot(aes(y = state_pc,
x = fct_relevel(state, c("Kayah", "Chin", "Magway", "Shan", "Kayin",
"Rakhine", "Mon", "Mandalay", "Ayeyarwady",
"Tanintharyi", "Yangon", "Kachin", "Sagaing", "Bago")),
fill = fct_relevel(domain,  c("secure",
"marginally_secure",
"moderately_insecure",
"severely_insecure")))) +
geom_col(position = position_stack()) +
geom_text(aes(label = state_pc),
position = position_stack(vjust = .5),
size = 2) +
scale_fill_manual(values = c("#4DB6AC",
"#80CBC4",
"#F57F17",
"#BF360C")) +
labs(fill = "",
x = "",
y = "Percentage of population",
title = "CARI domains by state",
subtitle = "Combination of MSNA and FAO/WFP Round 3") +
theme(legend.text = element_text(size = 5),
axis.text.x = element_text(angle = 60,
hjust = 1,
vjust = 1))
states %>%
select(state,
population,
PIN,
`%_PIN`,
`%_secure` = secure,
`%_marginally secure` = marginally_secure,
`%_moderately insecure` = moderately_insecure,
`%_severely insecure` = severely_insecure
) %>%
flextable() %>%
theme_zebra() %>%
set_caption("PIN and CARI domain breakdown by state") %>%
set_table_properties(layout = "autofit")
states %>%
select(state,
population,
pin,
`%_PIN`,
`%_secure` = secure,
`%_marginally secure` = marginally_secure,
`%_moderately insecure` = moderately_insecure,
`%_severely insecure` = severely_insecure
) %>%
flextable() %>%
theme_zebra() %>%
set_caption("PIN and CARI domain breakdown by state") %>%
set_table_properties(layout = "autofit")
states
msna %>% filter(state == "Sagaing") %>%
ggplot(aes(x = fs_calculated_fcs)) +
geom_histogram()
msna %>% filter(state == "Sagaing")
msna %>% select(contains("state"))
msna %>% filter(state == "sagaing") %>%
ggplot(aes(x = fs_calculated_fcs)) +
geom_histogram()
msna %>% filter(state == "sagaing") %>%
ggplot(aes(x = fs_calculated_fcs)) +
geom_histogram() +
labs(title = "Distribution of food consumption scores in Sagaing")
msna %>% filter(state == "sagaing") %>%
ggplot(aes(x = fs_calculated_fcs)) +
geom_histogram(bins = 30) +
labs(title = "Distribution of food consumption scores in Sagaing")
states %>%
group_by(state, domain) %>%
summarise(population = max(population),
pin = sum(pin))
states %>%
group_by(state, domain) %>%
summarise(population = max(population),
pin = sum(pin),
breakdown = sum(breakdown))
states %>%
group_by(state, domain) %>%
summarise(population = max(population),
pin = sum(pin),
breakdown = sum(breakdown)) %>%
pivot_wider(names_from = domain,
values_from = breakdown,
values_fill = 0)
states %>%
filter(!is.na(domain)) %>%
group_by(state, domain) %>%
summarise(population = max(population),
pin = sum(pin),
breakdown = sum(breakdown)) %>%
pivot_wider(names_from = domain,
values_from = breakdown,
values_fill = 0)
states %>%
filter(!is.na(domain)) %>%
group_by(state, domain) %>%
summarise(population = max(population),
breakdown = sum(breakdown)) %>%
pivot_wider(names_from = domain,
values_from = breakdown,
values_fill = 0)
states %>%
filter(!is.na(domain)) %>%
group_by(state, domain) %>%
summarise(population = max(population),
breakdown = sum(breakdown)) %>%
pivot_wider(names_from = domain,
values_from = breakdown,
values_fill = 0) %>%
mutate(pin = moderately_insecure + severely_insecure,
pc_pin = pin / sum(pin)) %>%
mutate_at(vars(secure, marginally_secure,
moderately_insecure, severely_insecure),
~ round(.x / population * 100,
digits = 2)) %>%
select(state,
population,
pin,
`%_pin` = pc_pin,
`%_secure` = secure,
`%_marginally secure` = marginally_secure,
`%_moderately insecure` = moderately_insecure,
`%_severely insecure` = severely_insecure) %>%
flextable() %>%
theme_zebra() %>%
set_caption("PIN and CARI domain breakdown by state") %>%
set_table_properties(layout = "autofit")
states %>%
filter(!is.na(domain)) %>%
group_by(state, domain) %>%
summarise(population = max(population),
breakdown = sum(breakdown)) %>%
pivot_wider(names_from = domain,
values_from = breakdown,
values_fill = 0) %>%
mutate(pin = moderately_insecure + severely_insecure) %>%
ungroup() %>%
mutate(pc_pin = round(pin / sum(pin) * 100,
digits = 2)) %>%
mutate_at(vars(secure, marginally_secure,
moderately_insecure, severely_insecure),
~ round(.x / population * 100,
digits = 2)) %>%
select(state,
population,
pin,
`%_pin` = pc_pin,
`%_secure` = secure,
`%_marginally secure` = marginally_secure,
`%_moderately insecure` = moderately_insecure,
`%_severely insecure` = severely_insecure) %>%
flextable() %>%
theme_zebra() %>%
set_caption("PIN and CARI domain breakdown by state") %>%
set_table_properties(layout = "autofit")
states %>%
filter(!is.na(domain)) %>%
group_by(state, domain) %>%
summarise(population = max(population),
breakdown = sum(breakdown)) %>%
pivot_wider(names_from = domain,
values_from = breakdown,
values_fill = 0) %>%
mutate(pin = moderately_insecure + severely_insecure) %>%
ungroup() %>%
mutate(pc_pin = round(pin / sum(pin) * 100,
digits = 2)) %>%
mutate_at(vars(secure, marginally_secure,
moderately_insecure, severely_insecure),
~ round(.x / population * 100,
digits = 2)) %>%
mutate_at(vars(pin, population),
~ round(.x)) %>%
select(state,
population,
pin,
`%_pin` = pc_pin,
`%_secure` = secure,
`%_marginally secure` = marginally_secure,
`%_moderately insecure` = moderately_insecure,
`%_severely insecure` = severely_insecure) %>%
flextable() %>%
theme_zebra() %>%
set_caption("PIN and CARI domain breakdown by state") %>%
set_table_properties(layout = "autofit")
states %>%
filter(!is.na(domain)) %>%
group_by(state, domain) %>%
summarise(population = max(population),
breakdown = sum(breakdown)) %>%
pivot_wider(names_from = domain,
values_from = breakdown,
values_fill = 0) %>%
mutate(pin = moderately_insecure + severely_insecure) %>%
ungroup() %>%
mutate(pc_pin = round(pin / sum(pin) * 100,
digits = 2)) %>%
#mutate_at(vars(secure, marginally_secure,
#               moderately_insecure, severely_insecure),
#          ~ round(.x / population * 100,
#                  digits = 2)) %>%
mutate_at(vars(pin, population),
~ round(.x)) %>%
select(state,
population,
pin,
`%_pin` = pc_pin,
`%_secure` = secure,
`%_marginally secure` = marginally_secure,
`%_moderately insecure` = moderately_insecure,
`%_severely insecure` = severely_insecure) %>%
flextable() %>%
theme_zebra() %>%
set_caption("PIN and CARI domain breakdown by state") %>%
set_table_properties(layout = "autofit")
states %>%
filter(!is.na(domain)) %>%
group_by(state, domain) %>%
summarise(population = max(population),
breakdown = sum(breakdown)) %>%
pivot_wider(names_from = domain,
values_from = breakdown,
values_fill = 0) %>%
mutate(pin = moderately_insecure + severely_insecure) %>%
ungroup() %>%
mutate(pc_pin = round(pin / sum(pin) * 100,
digits = 2)) %>%
#mutate_at(vars(secure, marginally_secure,
#               moderately_insecure, severely_insecure),
#          ~ round(.x / population * 100,
#                  digits = 2)) %>%
mutate_at(vars(pin, population),
~ round(.x)) %>%
select(state,
population,
pin,
`%_pin` = pc_pin,
secure,
`marginally secure` = marginally_secure,
`moderately insecure` = moderately_insecure,
`severely insecure` = severely_insecure) %>%
flextable() %>%
theme_zebra() %>%
set_caption("PIN and CARI domain breakdown by state") %>%
set_table_properties(layout = "autofit")
states %>%
filter(!is.na(domain)) %>%
group_by(state, domain) %>%
summarise(population = max(population),
breakdown = sum(breakdown)) %>%
pivot_wider(names_from = domain,
values_from = breakdown,
values_fill = 0) %>%
mutate(pin = moderately_insecure + severely_insecure) %>%
ungroup() %>%
mutate(pc_pin = round(pin / sum(pin) * 100,
digits = 2)) %>%
#mutate_at(vars(secure, marginally_secure,
#               moderately_insecure, severely_insecure),
#          ~ round(.x / population * 100,
#                  digits = 2)) %>%
mutate_at(vars(pin, population,
secure, marginally_secure,
moderately_insecure,
severely_insecure),
~ round(.x)) %>%
select(state,
population,
pin,
`%_pin` = pc_pin,
secure,
`marginally secure` = marginally_secure,
`moderately insecure` = moderately_insecure,
`severely insecure` = severely_insecure) %>%
flextable() %>%
theme_zebra() %>%
set_caption("PIN and CARI domain breakdown by state") %>%
set_table_properties(layout = "autofit")
states %>%
filter(!is.na(domain)) %>%
group_by(state, domain) %>%
summarise(population = max(population),
breakdown = sum(breakdown)) %>%
pivot_wider(names_from = domain,
values_from = breakdown,
values_fill = 0) %>%
mutate(pin = moderately_insecure + severely_insecure)
states
states %>%
pivot_wider(names_from = domain,
values_from = final_weight,
values_fill = 0)
states %>%
filter(!is.na(domain)) %>%
pivot_wider(names_from = domain,
values_from = breakdown,
values_fill = 0)
states %>% glimpse(
)
states %>%
group_by(state) %>%
summarise(secure = sum(breakdown[domain == "secure"]),
marinally_secure = sum(breakdown[domain == "marginally_secure"]),
moderately_insecure = sum(breakdown[domain == "moderately_insecure"]),
severely_insecure = sum(breakdown[domain == "severely_insecure"]),
population = sum(population))
states %>%
filter(state != "Nay Pyi Taw") %>%
group_by(state) %>%
summarise(secure = sum(breakdown[domain == "secure"]),
marinally_secure = sum(breakdown[domain == "marginally_secure"]),
moderately_insecure = sum(breakdown[domain == "moderately_insecure"]),
severely_insecure = sum(breakdown[domain == "severely_insecure"]),
population = sum(population))
msna %>% filter(state == "kayah") %>%
ggplot(aes(x = fs_calculated_fcs)) +
geom_histogram(bins = 30) +
labs(title = "Distribution of food consumption scores in Sagaing")
states <- msna %>%
mutate(
state = str_replace_all(state, "_", " "),
state = str_remove_all(state, "east|west|north|south"),
state = str_trim(state),
state = str_to_title(state)) %>%
mutate(status = case_when(
fs_calculated_fcs <= 21 ~ "poor",
fs_calculated_fcs >= 21.5 & fs_calculated_fcs <= 35 ~ "borderline",
fs_calculated_fcs > 35 ~ "acceptable")) %>%
group_by(state, status) %>%
summarise(weight = sum(weights, na.rm = TRUE),
.groups = "drop") %>%
mutate(state = str_replace_all(state, "_", " "),
state = str_remove_all(state, "east|west|north|south"),
state = str_trim(state),
state = str_to_title(state)) %>%
left_join(survey %>%
mutate(fcs_status = case_when(
hhfcs <= 21 ~ "poor",
hhfcs >= 21.5 & hhfcs <= 35 ~ "borderline",
hhfcs > 35 ~ "acceptable"),
rcsi_status = ifelse(rcsi >= 4,
"marginal", "secure")) %>%
group_by(adm_name, fcs_status, rcsi_status) %>%
summarise(weights = sum(weight_final),
.groups = "drop") %>%
mutate(pc = weights / sum(weights)) %>%
group_by(state = adm_name) %>%
mutate(state_weight = sum(weights),
state_pc = weights / state_weight) %>%
ungroup(),
by = "state") %>%
distinct(state,
weight,
fcs_status,
rcsi_status,
weights,
pc,
state_weight,
state_pc) %>%
mutate(rcsi_status = ifelse(fcs_status == "acceptable",
rcsi_status, NA_character_)) %>%
group_by(state, fcs_status, rcsi_status) %>%
summarise(weights = sum(weights)) %>%
mutate(domain = case_when(
fcs_status == "poor" ~ "severely_insecure",
fcs_status == "borderline" ~ "moderately_insecure",
fcs_status == "acceptable" & rcsi_status == "marginal" ~ "marginally_secure",
fcs_status == "acceptable" & rcsi_status == "secure" ~ "secure")) %>%
group_by(state, domain) %>%
summarise(final_weight = sum(weights),
.groups = "drop") %>%
group_by(state) %>%
mutate(state_pc = round(final_weight / sum(final_weight) * 100,
digits = 2)) %>%
ungroup() %>%
mutate(pc = round(final_weight / sum(final_weight, na.rm = TRUE) * 100,
digits = 2))  %>%
left_join(pin %>%
mutate(state = recode(state,
"Bago (East)" = "Bago",
"Bago (West)" = "Bago",
"Shan (North)" = "Shan",
"Shan (East)" = "Shan",
"Shan (South)" = "Shan")) %>%
group_by(state) %>%
summarise(population = sum(population_2021_proj)))
states <- msna %>%
mutate(
state = str_replace_all(state, "_", " "),
state = str_remove_all(state, "east|west|north|south"),
state = str_trim(state),
state = str_to_title(state)) %>%
mutate(status = case_when(
fs_calculated_fcs <= 21 ~ "poor",
fs_calculated_fcs >= 21.5 & fs_calculated_fcs <= 35 ~ "borderline",
fs_calculated_fcs > 35 ~ "acceptable")) %>%
group_by(state, status) %>%
summarise(weight = sum(weights, na.rm = TRUE),
.groups = "drop") %>%
mutate(state = str_replace_all(state, "_", " "),
state = str_remove_all(state, "east|west|north|south"),
state = str_trim(state),
state = str_to_title(state)) %>%
left_join(survey %>%
mutate(fcs_status = case_when(
hhfcs <= 21 ~ "poor",
hhfcs >= 21.5 & hhfcs <= 35 ~ "borderline",
hhfcs > 35 ~ "acceptable"),
rcsi_status = ifelse(rcsi >= 4,
"marginal", "secure")) %>%
group_by(adm_name, fcs_status, rcsi_status) %>%
summarise(weights = sum(weight_final),
.groups = "drop") %>%
mutate(pc = weights / sum(weights)) %>%
group_by(state = adm_name) %>%
mutate(state_weight = sum(weights),
state_pc = weights / state_weight) %>%
ungroup(),
by = "state") %>%
distinct(state,
weight,
fcs_status,
rcsi_status,
weights,
pc,
state_weight,
state_pc) %>%
mutate(rcsi_status = ifelse(fcs_status == "acceptable",
rcsi_status, NA_character_)) %>%
group_by(state, fcs_status, rcsi_status) %>%
summarise(weights = sum(weights)) %>%
mutate(domain = case_when(
fcs_status == "poor" ~ "severely_insecure",
fcs_status == "borderline" ~ "moderately_insecure",
fcs_status == "acceptable" & rcsi_status == "marginal" ~ "marginally_secure",
fcs_status == "acceptable" & rcsi_status == "secure" ~ "secure")) %>%
group_by(state, domain) %>%
summarise(final_weight = sum(weights),
.groups = "drop") %>%
group_by(state) %>%
mutate(state_pc = round(final_weight / sum(final_weight) * 100,
digits = 2)) %>%
ungroup() %>%
mutate(pc = round(final_weight / sum(final_weight, na.rm = TRUE) * 100,
digits = 2))  %>%
left_join(pin %>%
mutate(state = recode(state,
"Bago (East)" = "Bago",
"Bago (West)" = "Bago",
"Shan (North)" = "Shan",
"Shan (East)" = "Shan",
"Shan (South)" = "Shan")) %>%
group_by(state) %>%
summarise(population = sum(population_2021_proj)))
