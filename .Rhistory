group_by(adm_name,
fcs_status,
rcsi_status) %>%
summarise(weights = sum(weight_final)) %>%
mutate(pc = weights / sum(weights)) %>%
ungroup() %>%
select(state = adm_name, rcsi_status, pc) %>%
pivot_wider(names_from = rcsi_status,
values_from = pc),
by = "state") %>%
mutate(marginal_weight = marginal * weight,
secure_weight = secure * weight) %>%
pivot_longer(cols = c(marginal_weight,
secure_weight)) %>%
mutate(final_weight = case_when(
status == "acceptable" ~ value,
status == "borderline" ~ weight,
status == "poor" ~ weight
)) %>%
mutate(domain = case_when(
status == "poor" ~ "severely_insecure",
status == "borderline" ~ "moderately_insecure",
status == "acceptable" & name == "marginal_weight" ~ "marginally_secure",
status == "acceptable" & name == "secure_weight" ~ "secure"
)) %>%
filter(!is.na(domain)) %>%
group_by(state, domain) %>%
summarise(final_weight = sum(final_weight),
.groups = "drop") %>%
group_by(state) %>%
mutate(state_pc = round(final_weight / sum(final_weight) * 100,
digits = 2)) %>%
ungroup() %>%
pivot_wider(names_from = domain,
values_from = state_pc,
values_fill = 0) %>%
group_by(state) %>%
summarise(final_weight = sum(final_weight),
secure = max(secure, na.rm = TRUE),
marginally_secure = max(marginally_secure, na.rm = TRUE),
moderately_insecure = max(moderately_insecure, na.rm = TRUE),
severely_insecure = max(severely_insecure, na.rm = TRUE)) %>%
mutate(pc = round(final_weight / sum(final_weight, na.rm = TRUE) * 100,
digits = 2)) %>%
relocate(pc, .after = final_weight) %>%
mutate(population = pc / 100 * 53431391.27,
PIN = (moderately_insecure + severely_insecure) / 100 * population,
`%_PIN` = round(PIN / sum(PIN, na.rm = TRUE) * 100,
digits = 2),
insecure = moderately_insecure + severely_insecure) %>%
mutate_at(vars(population, PIN),
~ round(.x))
msna %>% count(marginal)
msna %>% glimpse()
msna %>%
mutate(state = str_replace_all(state, "_", " "),
state = str_remove_all(state, "east|west|north|south"),
state = str_trim(state),
state = str_to_title(state)) %>%
mutate(status = case_when(fs_calculated_fcs <= 21 ~ "poor",
fs_calculated_fcs >=21.5 & fs_calculated_fcs <= 35 ~ "borderline",
fs_calculated_fcs > 35 ~ "acceptable")) %>%
group_by(state, status) %>%
summarise(weight = sum(weights, na.rm = TRUE),
.groups = "drop") %>%
mutate(state = str_replace_all(state, "_", " "),
state = str_remove_all(state, "east|west|north|south"),
state = str_trim(state),
state = str_to_title(state)) %>%
left_join(survey %>%
mutate(
fcs_status = case_when(
hhfcs <= 21 ~ "poor",
hhfcs >= 21.5 & hhfcs <= 35 ~ "borderline",
hhfcs > 35 ~ "acceptable"),
rcsi_status = ifelse(rcsi >= 4,
"marginal", "secure")) %>%
group_by(adm_name,
fcs_status,
rcsi_status) %>%
summarise(weights = sum(weight_final)) %>%
mutate(pc = weights / sum(weights)) %>%
ungroup() %>%
select(state = adm_name, rcsi_status, pc) %>%
pivot_wider(names_from = rcsi_status,
values_from = pc),
by = "state")
msna %>%
mutate(state = str_replace_all(state, "_", " "),
state = str_remove_all(state, "east|west|north|south"),
state = str_trim(state),
state = str_to_title(state)) %>%
mutate(status = case_when(fs_calculated_fcs <= 21 ~ "poor",
fs_calculated_fcs >=21.5 & fs_calculated_fcs <= 35 ~ "borderline",
fs_calculated_fcs > 35 ~ "acceptable")) %>%
group_by(state, status) %>%
summarise(weight = sum(weights, na.rm = TRUE),
.groups = "drop") %>%
mutate(state = str_replace_all(state, "_", " "),
state = str_remove_all(state, "east|west|north|south"),
state = str_trim(state),
state = str_to_title(state)) %>%
left_join(survey %>%
mutate(
fcs_status = case_when(
hhfcs <= 21 ~ "poor",
hhfcs >= 21.5 & hhfcs <= 35 ~ "borderline",
hhfcs > 35 ~ "acceptable"),
rcsi_status = ifelse(rcsi >= 4,
"marginal", "secure")) %>%
group_by(adm_name,
fcs_status,
rcsi_status) %>%
summarise(weights = sum(weight_final)) %>%
mutate(pc = weights / sum(weights)) %>%
ungroup() %>%
filter(fcs_status == "acceptable") %>%
select(state = adm_name, rcsi_status, pc) %>%
pivot_wider(names_from = rcsi_status,
values_from = pc),
by = "state") %>%
mutate(marginal_weight = marginal * weight,
secure_weight = secure * weight) %>%
pivot_longer(cols = c(marginal_weight,
secure_weight)) %>%
mutate(final_weight = case_when(
status == "acceptable" ~ value,
status == "borderline" ~ weight,
status == "poor" ~ weight
)) %>%
mutate(domain = case_when(
status == "poor" ~ "severely_insecure",
status == "borderline" ~ "moderately_insecure",
status == "acceptable" & name == "marginal_weight" ~ "marginally_secure",
status == "acceptable" & name == "secure_weight" ~ "secure"
)) %>%
filter(!is.na(domain)) %>%
group_by(state, domain) %>%
summarise(final_weight = sum(final_weight),
.groups = "drop") %>%
group_by(state) %>%
mutate(state_pc = round(final_weight / sum(final_weight) * 100,
digits = 2)) %>%
ungroup() %>%
pivot_wider(names_from = domain,
values_from = state_pc,
values_fill = 0) %>%
group_by(state) %>%
summarise(final_weight = sum(final_weight),
secure = max(secure, na.rm = TRUE),
marginally_secure = max(marginally_secure, na.rm = TRUE),
moderately_insecure = max(moderately_insecure, na.rm = TRUE),
severely_insecure = max(severely_insecure, na.rm = TRUE)) %>%
mutate(pc = round(final_weight / sum(final_weight, na.rm = TRUE) * 100,
digits = 2)) %>%
relocate(pc, .after = final_weight) %>%
mutate(population = pc / 100 * 53431391.27,
PIN = (moderately_insecure + severely_insecure) / 100 * population,
`%_PIN` = round(PIN / sum(PIN, na.rm = TRUE) * 100,
digits = 2),
insecure = moderately_insecure + severely_insecure) %>%
mutate_at(vars(population, PIN),
~ round(.x))
states %>%
pivot_longer(cols = c(secure,
marginally_secure,
moderately_insecure,
severely_insecure)) %>%
ggplot(aes(y = pc,
x = fct_relevel(state, c("Rakhine", "Kayin", "Magway", "Sagaing",
"Chin", "Kayah", "Shan", "Tanintharyi",
"Kachin", "Bago", "Mon", "Ayeyarwady",
"Yangon", "Mandalay")),
fill = fct_relevel(name,
c("secure",
"marginally_secure",
"moderately_insecure",
"severely_insecure")))) +
geom_col(position = position_stack()) +
geom_text(aes(label = pc),
position = position_stack(vjust = .5),
size = 2) +
scale_fill_manual(values = c("#4DB6AC",
"#80CBC4",
"#F57F17",
"#BF360C")) +
labs(fill = "",
x = "",
y = "Percentage of population",
title = "CARI domains by state",
subtitle = "Combination of MSNA and FAO/WFP Round 3") +
theme(legend.text = element_text(size = 5),
axis.text.x = element_text(angle = 60,
hjust = 1,
vjust = 1))
states %>%
pivot_longer(cols = c(secure,
marginally_secure,
moderately_insecure,
severely_insecure)) %>%
ggplot(aes(y = value,
x = fct_relevel(state, c("Rakhine", "Kayin", "Magway", "Sagaing",
"Chin", "Kayah", "Shan", "Tanintharyi",
"Kachin", "Bago", "Mon", "Ayeyarwady",
"Yangon", "Mandalay")),
fill = fct_relevel(name,
c("secure",
"marginally_secure",
"moderately_insecure",
"severely_insecure")))) +
geom_col(position = position_stack()) +
geom_text(aes(label = value),
position = position_stack(vjust = .5),
size = 2) +
scale_fill_manual(values = c("#4DB6AC",
"#80CBC4",
"#F57F17",
"#BF360C")) +
labs(fill = "",
x = "",
y = "Percentage of population",
title = "CARI domains by state",
subtitle = "Combination of MSNA and FAO/WFP Round 3") +
theme(legend.text = element_text(size = 5),
axis.text.x = element_text(angle = 60,
hjust = 1,
vjust = 1))
states %>%
pivot_longer(cols = c(secure,
marginally_secure,
moderately_insecure,
severely_insecure)) %>%
ggplot(aes(y = value,
x = fct_relevel(state, c("Rakhine", "Kayin", "Magway", "Sagaing",
"Chin", "Kayah", "Shan", "Tanintharyi",
"Kachin", "Bago", "Mon", "Ayeyarwady",
"Yangon", "Mandalay")),
fill = fct_relevel(name,
c("secure",
"marginally_secure",
"moderately_insecure",
"severely_insecure")))) +
geom_col(position = position_stack())
states %>%
pivot_longer(cols = c(secure,
marginally_secure,
moderately_insecure,
severely_insecure)) %>%
ggplot(aes(y = value,
x = fct_relevel(state, c("Rakhine", "Kayin", "Magway", "Sagaing",
"Chin", "Kayah", "Shan", "Tanintharyi",
"Kachin", "Bago", "Mon", "Ayeyarwady",
"Yangon", "Mandalay")),
fill = fct_relevel(name,
c("secure",
"marginally_secure",
"moderately_insecure",
"severely_insecure")))) +
geom_col(position = position_stack()) +
geom_text(aes(label = value),
position = position_stack(vjust = .5),
size = 2)
states %>%
pivot_longer(cols = c(secure,
marginally_secure,
moderately_insecure,
severely_insecure))
states
msna %>%
mutate(state = str_replace_all(state, "_", " "),
state = str_remove_all(state, "east|west|north|south"),
state = str_trim(state),
state = str_to_title(state)) %>%
mutate(status = case_when(fs_calculated_fcs <= 21 ~ "poor",
fs_calculated_fcs >=21.5 & fs_calculated_fcs <= 35 ~ "borderline",
fs_calculated_fcs > 35 ~ "acceptable")) %>%
group_by(state, status) %>%
summarise(weight = sum(weights, na.rm = TRUE),
.groups = "drop") %>%
mutate(state = str_replace_all(state, "_", " "),
state = str_remove_all(state, "east|west|north|south"),
state = str_trim(state),
state = str_to_title(state)) %>%
left_join(survey %>%
mutate(
fcs_status = case_when(
hhfcs <= 21 ~ "poor",
hhfcs >= 21.5 & hhfcs <= 35 ~ "borderline",
hhfcs > 35 ~ "acceptable"),
rcsi_status = ifelse(rcsi >= 4,
"marginal", "secure")) %>%
group_by(adm_name,
fcs_status,
rcsi_status) %>%
summarise(weights = sum(weight_final)) %>%
mutate(pc = weights / sum(weights)) %>%
ungroup() %>%
filter(fcs_status == "acceptable") %>%
select(state = adm_name, rcsi_status, pc) %>%
pivot_wider(names_from = rcsi_status,
values_from = pc),
by = "state") %>%
mutate(marginal_weight = marginal * weight,
secure_weight = secure * weight) %>%
pivot_longer(cols = c(marginal_weight,
secure_weight)) %>%
mutate(final_weight = case_when(
status == "acceptable" ~ value,
status == "borderline" ~ weight,
status == "poor" ~ weight
)) %>%
mutate(domain = case_when(
status == "poor" ~ "severely_insecure",
status == "borderline" ~ "moderately_insecure",
status == "acceptable" & name == "marginal_weight" ~ "marginally_secure",
status == "acceptable" & name == "secure_weight" ~ "secure"
)) %>%
filter(!is.na(domain)) %>%
group_by(state, domain) %>%
summarise(final_weight = sum(final_weight),
.groups = "drop") %>%
group_by(state) %>%
mutate(state_pc = round(final_weight / sum(final_weight) * 100,
digits = 2)) %>%
ungroup() %>%
pivot_wider(names_from = domain,
values_from = state_pc,
values_fill = 0) %>%
group_by(state) %>%
summarise(final_weight = sum(final_weight),
secure = max(secure, na.rm = TRUE),
marginally_secure = max(marginally_secure, na.rm = TRUE),
moderately_insecure = max(moderately_insecure, na.rm = TRUE),
severely_insecure = max(severely_insecure, na.rm = TRUE)) %>%
mutate(pc = round(final_weight / sum(final_weight, na.rm = TRUE) * 100,
digits = 2)) %>%
relocate(pc, .after = final_weight) %>%
mutate(population = pc / 100 * 53431391.27,
PIN = (moderately_insecure + severely_insecure) / 100 * population,
`%_PIN` = round(PIN / sum(PIN, na.rm = TRUE) * 100,
digits = 2),
insecure = moderately_insecure + severely_insecure) %>%
mutate_at(vars(population, PIN),
~ round(.x))
states <- msna %>%
mutate(state = str_replace_all(state, "_", " "),
state = str_remove_all(state, "east|west|north|south"),
state = str_trim(state),
state = str_to_title(state)) %>%
mutate(status = case_when(fs_calculated_fcs <= 21 ~ "poor",
fs_calculated_fcs >=21.5 & fs_calculated_fcs <= 35 ~ "borderline",
fs_calculated_fcs > 35 ~ "acceptable")) %>%
group_by(state, status) %>%
summarise(weight = sum(weights, na.rm = TRUE),
.groups = "drop") %>%
mutate(state = str_replace_all(state, "_", " "),
state = str_remove_all(state, "east|west|north|south"),
state = str_trim(state),
state = str_to_title(state)) %>%
left_join(survey %>%
mutate(
fcs_status = case_when(
hhfcs <= 21 ~ "poor",
hhfcs >= 21.5 & hhfcs <= 35 ~ "borderline",
hhfcs > 35 ~ "acceptable"),
rcsi_status = ifelse(rcsi >= 4,
"marginal", "secure")) %>%
group_by(adm_name,
fcs_status,
rcsi_status) %>%
summarise(weights = sum(weight_final)) %>%
mutate(pc = weights / sum(weights)) %>%
ungroup() %>%
filter(fcs_status == "acceptable") %>%
select(state = adm_name, rcsi_status, pc) %>%
pivot_wider(names_from = rcsi_status,
values_from = pc),
by = "state") %>%
mutate(marginal_weight = marginal * weight,
secure_weight = secure * weight) %>%
pivot_longer(cols = c(marginal_weight,
secure_weight)) %>%
mutate(final_weight = case_when(
status == "acceptable" ~ value,
status == "borderline" ~ weight,
status == "poor" ~ weight
)) %>%
mutate(domain = case_when(
status == "poor" ~ "severely_insecure",
status == "borderline" ~ "moderately_insecure",
status == "acceptable" & name == "marginal_weight" ~ "marginally_secure",
status == "acceptable" & name == "secure_weight" ~ "secure"
)) %>%
filter(!is.na(domain)) %>%
group_by(state, domain) %>%
summarise(final_weight = sum(final_weight),
.groups = "drop") %>%
group_by(state) %>%
mutate(state_pc = round(final_weight / sum(final_weight) * 100,
digits = 2)) %>%
ungroup() %>%
pivot_wider(names_from = domain,
values_from = state_pc,
values_fill = 0) %>%
group_by(state) %>%
summarise(final_weight = sum(final_weight),
secure = max(secure, na.rm = TRUE),
marginally_secure = max(marginally_secure, na.rm = TRUE),
moderately_insecure = max(moderately_insecure, na.rm = TRUE),
severely_insecure = max(severely_insecure, na.rm = TRUE)) %>%
mutate(pc = round(final_weight / sum(final_weight, na.rm = TRUE) * 100,
digits = 2)) %>%
relocate(pc, .after = final_weight) %>%
mutate(population = pc / 100 * 53431391.27,
PIN = (moderately_insecure + severely_insecure) / 100 * population,
`%_PIN` = round(PIN / sum(PIN, na.rm = TRUE) * 100,
digits = 2),
insecure = moderately_insecure + severely_insecure) %>%
mutate_at(vars(population, PIN),
~ round(.x))
states %>%
pivot_longer(cols = c(secure,
marginally_secure,
moderately_insecure,
severely_insecure)) %>%
ggplot(aes(y = value,
x = fct_relevel(state, c("Rakhine", "Kayin", "Magway", "Sagaing",
"Chin", "Kayah", "Shan", "Tanintharyi",
"Kachin", "Bago", "Mon", "Ayeyarwady",
"Yangon", "Mandalay")),
fill = fct_relevel(name,
c("secure",
"marginally_secure",
"moderately_insecure",
"severely_insecure")))) +
geom_col(position = position_stack()) +
geom_text(aes(label = value),
position = position_stack(vjust = .5),
size = 2) +
scale_fill_manual(values = c("#4DB6AC",
"#80CBC4",
"#F57F17",
"#BF360C")) +
labs(fill = "",
x = "",
y = "Percentage of population",
title = "CARI domains by state",
subtitle = "Combination of MSNA and FAO/WFP Round 3") +
theme(legend.text = element_text(size = 5),
axis.text.x = element_text(angle = 60,
hjust = 1,
vjust = 1))
states %>%
select(state,
population,
PIN,
`%_PIN`,
`%_secure` = secure,
`%_marginally secure` = marginally_secure,
`%_moderately insecure` = moderately_insecure,
`%_severely insecure` = severely_insecure
) %>%
flextable() %>%
theme_zebra() %>%
set_caption("PIN and CARI domain breakdown by state") %>%
set_table_properties(layout = "autofit")
states %>%
mutate(population = pc / 100 * 53431391.27,
moderately_insecure = moderately_insecure / 100 * population,
severely_insecure = severely_insecure / 100 * population,
PIN = (moderately_insecure + severely_insecure),
`%_PIN` = round(PIN / sum(PIN, na.rm = TRUE) * 100,
digits = 2),
insecure = moderately_insecure + severely_insecure) %>%
mutate_at(vars(moderately_insecure,
severely_insecure,
insecure),
~ round(.x)) %>%
arrange(desc(insecure)) %>%
pivot_longer(cols = c(moderately_insecure,
severely_insecure)) %>%
filter(value > 0) %>%
ggplot(aes(y = value,
x = fct_reorder(state, -insecure),
fill = fct_relevel(name,
c(
"moderately_insecure",
"severely_insecure")))) +
geom_col(position = position_stack()) +
geom_text(aes(label = comma(value)),
position = position_stack(vjust = .5),
size = 2) +
scale_fill_manual(values = c(
"#F57F17",
"#BF360C")) +
scale_y_continuous(labels = comma) +
labs(fill = "",
x = "",
y = "Persons in need",
title = "People in need by state",
subtitle = "Combination of MSNA and FAO/WFP Round 3") +
theme(legend.text = element_text(size = 5),
axis.text.x = element_text(angle = 60,
hjust = 1,
vjust = 1))
setwd("~/R/allocation_proposal")
pcodes <- read_excel("./data/Myanmar PCodes Release_9.3_Jan2021_(StRgn_Dist_Tsp_Town_Ward_VT).xlsx",
sheet = "03_Township")
setwd("~/R/allocation_proposal")
pcodes <- read_excel("./data/Myanmar PCodes Release_9.3_Jan2021_(StRgn_Dist_Tsp_Town_Ward_VT).xlsx",
sheet = "03_Township")
library(here)
