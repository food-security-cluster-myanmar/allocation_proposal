---
title: "DRAFT State and Township PIN allocations"
author: "[Myanmar Food Security Cluster](https://github.com/food-security-cluster-myanmar)"
date: "20/09/2022"
output: 
  html_document:
    code_download: true
    theme: readable
    toc: true
    toc_depth: 4
    toc_float: true
    number_sections: false
    collapsed: false
always_allow_html: true   
---

```{css, echo=FALSE}

#TOC::before {
  content: "";
  display: block;
  height: 70px;
  margin: 2em 20px 40px 20px;
  background-image: url("Myanmar_cluster_blue.png");
  background-size: contain;
  background-position: center center;
  background-repeat: no-repeat;
}
```

```{=html}
<style>
    body .main-container {
        max-width: 1280px;
    }
</style>
```


```{r setup, include=FALSE, message=FALSE, warning=FALSE, echo=FALSE, fig.width=8}
knitr::opts_chunk$set(echo = FALSE)

library(tidyverse)
library(scales)
library(janitor)
library(haven)
library(psych)
library(skimr)
library(mdepriv)
library(broom)
library(readxl)
library(widyr)
library(DT)
library(viridis)
library(corrplot)
library(rpart)
library(rpart.utils)
library(rattle)
library(rpart.plot)
library(randomForest)
library(broomstick)
library(patchwork)
library(tidymodels)
library(vip)
library(glmnet)
library(tidytext)
library(flextable)
library(skimr)
library(RColorBrewer)
library(lubridate)
library(here)

range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}

mode <- function(x) {
  ux <- unique(x)
  ux[which.max(tabulate(match(x, ux)))]
}

opts <- options(knitr.kable.NA = "")

`%out%` <- Negate(`%in%`)

# disabling scientific notation
options(scipen = 999)

theme_set(theme_light())
```


## Introduction 

This document outlines a proposal to calculate the Food Security Cluster PIN based on a combination of REACH MSNA data and FAO/WFP survey Round 3. 

It is currently unclear if the fourth round of results from FAO/WFP will be ready in time for the rest of the 2023 planning exercises. Though, it should also be mentioned that a cursory inspection of the various datasets shows the MSNA to be very well conducted and a more than able replacement for the FAO/WFP survey, should it not be finished in time. 

It is my intention, with these provisional results, to provide partners with information that might help shape the
It is my intention, with this mock-up, to provide partners with information on how the state and township allocations may look in 2023. 

I would also encourage any and all comments from all concerned parties. 

<br><br><br>

## Data and references

### References for this report

* ACLED, (2022). ACLED data for Myanmar (2010-2022). Retrieved from https://acleddata.com on 2022-06-06. 
* International Food Policy Research Institute (2022). Myanmar Household Welfare Survey (MHWS), Round 1. Harvard Dataverse, doi: 10.7910/DVN/1R3F3U,. Retrieved from https://doi.org/10.7910/DVN/1R3F3U on 2022-09-01. 
* FAO and WFP (2022). Food Security Monitoring Survey Round 3. FAO and WFP. 
* Food Security Cluster Myanmar (2022). Township Prioritisation. https://food-security-cluster-myanmar.github.io/mmr_township_prioritisation/. 
* Food Security Cluster, Myanmar (2022). Understanding Conflict Dynamics in Myanmar through Conflict and Incident Data: A Food Security Perspective. https://food-security-cluster-myanmar.github.io/exploratory-data-analysis-acled-fsc/.
* HARP-F and MIMU (2018). Vulnerability in Myanmar: A Secondary Data Review of Needs, Coverage and Gaps. http://themimu.info/vulnerability-in-myanmar.
* REACH (2022). Myanmar Multi-sector Needs Assessment. REACH. 


```{r datasets, message=FALSE, warning=FALSE}
pcodes <- read_excel("./data/Myanmar PCodes Release_9.3_Jan2021_(StRgn_Dist_Tsp_Town_Ward_VT).xlsx",
                     sheet = "03_Township") 

conflict_score <-  read_csv("./data/conflict_score_20220920.csv") 

pin <- read_csv("./data/fs_pin.csv") 

survey <- read_csv("./data/survey3.csv") %>% 
  mutate(rcsi = 
           r_csi_less_qlty * 1 + 
           r_csi_borrow * 2 + 
           r_csi_meal_nb * 1 + 
           r_csi_meal_size * 1 + 
           r_csi_meal_adult * 3, 
         rcsi_range = range_wna(rcsi))

pin <- read_csv("./data/fs_pin.csv")

msna <- read_csv("./data/msna.csv")

```

<br>

Additionally, the draft township-level PINs have been read into a simplet dataset [here](https://github.com/food-security-cluster-myanmar/allocation_proposal/raw/main/data/draft_pin_dataset.xlsx) for easy comparison and comsumption. 


<br><br><br>

## State and Region PINs

```{r}
states <- msna %>%
  mutate(
    state = str_replace_all(state, "_", " "),
    state = str_remove_all(state, "east|west|north|south"),
    state = str_trim(state),
    state = str_to_title(state)) %>%
  mutate(status = case_when(
    fs_calculated_fcs <= 21 ~ "poor",
    fs_calculated_fcs >= 21.5 & fs_calculated_fcs <= 35 ~ "borderline",
    fs_calculated_fcs > 35 ~ "acceptable")) %>% 
  group_by(state, status) %>% 
  summarise(weight = sum(weights, na.rm = TRUE), 
            .groups = "drop") %>% 
  mutate(state = str_replace_all(state, "_", " "),
    state = str_remove_all(state, "east|west|north|south"),
    state = str_trim(state),
    state = str_to_title(state)) %>%
  left_join(survey %>% 
              mutate(fcs_status = case_when(
                hhfcs <= 21 ~ "poor",
                hhfcs >= 21.5 & hhfcs <= 35 ~ "borderline",
                hhfcs > 35 ~ "acceptable"), 
                rcsi_status = ifelse(rcsi >= 4, 
                                     "marginal", "secure")) %>% 
              group_by(adm_name, fcs_status, rcsi_status) %>%
              summarise(weights = sum(weight_final), 
                        .groups = "drop") %>% 
              mutate(pc = weights / sum(weights)) %>% 
              group_by(state = adm_name) %>% 
              mutate(state_weight = sum(weights), 
                     state_pc = weights / state_weight) %>% 
              ungroup(), 
            by = "state") %>% 
  distinct(state,
           weight, 
           fcs_status, 
           rcsi_status, 
           weights, 
           pc, 
           state_weight, 
           state_pc) %>% 
  mutate(rcsi_status = ifelse(fcs_status == "acceptable", 
                              rcsi_status, NA_character_)) %>% 
  group_by(state, fcs_status, rcsi_status) %>% 
  summarise(weights = sum(weights)) %>% 
  mutate(domain = case_when(
      fcs_status == "poor" ~ "severely_insecure",
      fcs_status == "borderline" ~ "moderately_insecure",
      fcs_status == "acceptable" & rcsi_status == "marginal" ~ "marginally_secure",
      fcs_status == "acceptable" & rcsi_status == "secure" ~ "secure")) %>% 
  group_by(state, domain) %>% 
  summarise(final_weight = sum(weights), 
            .groups = "drop") %>% 
  group_by(state) %>%
  mutate(state_pc = round(final_weight / sum(final_weight) * 100,
                          digits = 2)) %>% 
  ungroup() %>%
  mutate(pc = round(final_weight / sum(final_weight, na.rm = TRUE) * 100,
                    digits = 2))  %>%
  left_join(pin %>% 
              mutate(state = recode(state, 
                        "Bago (East)" = "Bago", 
                        "Bago (West)" = "Bago", 
                        "Shan (North)" = "Shan", 
                        "Shan (East)" = "Shan", 
                        "Shan (South)" = "Shan")) %>% 
              group_by(state) %>% 
              summarise(population = sum(population_2021_proj)))  

 
```



Using the food consumption scores from the MSNA and the reduced coping strategies index from the FAO/WFP Survey Round 3, it has been possible to replicate the CARI methodology used to calculate the 2022 PIN. 

Below is an explanatory chart where how each of the food consumption and coping strategies indicators relate to the 4 CARI domains. 

![](./img/cari.png)


Applying this methodology to currently available data, yields a unionwide PIN of 8,518,220. This is the total number of persons who are moderately and severely food insecure. This is a 35.58% decrease from the 2022 PIN of 13,222,469. 

<br>

```{r eval = FALSE}
sum(states$PIN, na.rm = TRUE) %>% format(big.mark = ",")

round(((sum(pin$fs_pin, na.rm = TRUE)) - (sum(states$PIN, na.rm = TRUE))) / (sum(pin$fs_pin, na.rm = TRUE)) * 100, digits = 2)

sum(pin$fs_pin, na.rm = TRUE) %>% format(big.mark = ",")

states %>%  
  group_by(state) %>% summarise_at("pin", sum) %>% 
  arrange(desc(pin))

states %>% 
  filter(!is.na(domain)) %>% 
  select(state, domain, final_weight) %>% 
  pivot_wider(names_from = domain, 
              values_from = final_weight, 
              values_fill = 0) %>% 
  mutate(insecure = moderately_insecure + severely_insecure, 
         food_secure = secure + marginally_secure, 
         pc = insecure / (food_secure + insecure)) %>% 
  arrange(desc(pc)) %>% pull(state)

 "Kayah", "Chin", "Magway", "Shan", "Kayin", "Rakhine", "Mon",        
 "Mandalay", "Ayeyarwady", "Tanintharyi", "Yangon", "Kachin", "Sagaing", "Bago" 

```


```{r states-stacked-bar, fig.width=8}
states %>% 
  filter(state != "Nay Pyi Taw") %>% 
  ggplot(aes(y = state_pc, 
             x = fct_relevel(state, c("Kayah", "Chin", "Magway", "Shan", "Kayin", 
                                      "Rakhine", "Mon", "Mandalay", "Ayeyarwady", 
                                      "Tanintharyi", "Yangon", "Kachin", "Sagaing", "Bago")),
             fill = fct_relevel(domain,  c("secure",
                                           "marginally_secure",
                                           "moderately_insecure",
                                           "severely_insecure")))) +
  geom_col(position = position_stack()) + 
  geom_text(aes(label = state_pc),
            position = position_stack(vjust = .5),
            size = 2) + 
  scale_fill_manual(values = c("#4DB6AC",
                               "#80CBC4", 
                               "#F57F17", 
                               "#BF360C")) + 
  labs(fill = "", 
       x = "", 
       y = "Percentage of population", 
       title = "CARI domains by state", 
       subtitle = "Combination of MSNA and FAO/WFP Round 3") +
  theme(legend.text = element_text(size = 5), 
        axis.text.x = element_text(angle = 60, 
                                   hjust = 1,
                                   vjust = 1))

```


<br>

Presented as a table: 

<br>

```{r}
states %>%
  filter(state != "Nay Pyi Taw") %>% 
  group_by(state) %>% 
  summarise(secure = sum(breakdown[domain == "secure"]), 
            marinally_secure = sum(breakdown[domain == "marginally_secure"]), 
            moderately_insecure = sum(breakdown[domain == "moderately_insecure"]), 
            severely_insecure = sum(breakdown[domain == "severely_insecure"]), 
            population = sum(population)) %>% 
  mutate(pin = moderately_insecure + severely_insecure)
```



```{r}
states %>% 
  filter(!is.na(domain)) %>% 
  group_by(state, domain) %>% 
  summarise(population = max(population), 
            breakdown = sum(breakdown)) %>% 
  pivot_wider(names_from = domain, 
              values_from = breakdown, 
              values_fill = 0) %>% 
  mutate(pin = moderately_insecure + severely_insecure) %>% 
  ungroup() %>% 
  mutate(pc_pin = round(pin / sum(pin) * 100, 
                        digits = 2)) %>% 
 
  mutate_at(vars(pin, population, 
                 secure, marginally_secure, 
                 moderately_insecure, 
                 severely_insecure),
            ~ round(.x)) %>% 
  select(state, 
         population, 
         pin, 
         `%_pin` = pc_pin, 
         secure, 
         `marginally secure` = marginally_secure, 
         `moderately insecure` = moderately_insecure, 
         `severely insecure` = severely_insecure) %>% 
  flextable() %>% 
  theme_zebra() %>% 
  set_caption("PIN and CARI domain breakdown by state") %>% 
  set_table_properties(layout = "autofit")
```

<br>

80% of the PIN comes from Rakhine, Kayin, Magway, Sagaing and Shan. There areas are also where the majority of the population that is severely-food insecure is located. 

<br><br>

### Limitations of the combined approach

* Some amount of data manipulation is necessary is make use of the FCS scores from the MSNA and the RCSI from the FAO/WFP survey. Download the code for this document to review the exact calculation. 

* It is encouraging to see that in Yangon -- and the other urban areas -- the caseload is very low. This aligns with our commonsensical understanding of the response. 

* Whilst the draft PIN has been developed, each of the states and regions and townships that will be mentioned below but effective programme designs have yet to be developed to address the both acute and chronic food insecurity. 

* And of course the data is a bit older than FAO/WFP round 4, which is ongoing now. The MSNA was collected in August 2022 and is definitely still valid. The coping strategies indicators did come from the round 3 survey, which was conducted in April 2022. 

Finally, here is the state-level PIN broken down by moderately and severely food insecure. 

<br>

```{r warning=FALSE, fig.width=8}
states %>% 
  mutate(population = pc / 100 * 53431391.27, 
         moderately_insecure = moderately_insecure / 100 * population, 
         severely_insecure = severely_insecure / 100 * population, 
         PIN = (moderately_insecure + severely_insecure), 
         `%_PIN` = round(PIN / sum(PIN, na.rm = TRUE) * 100, 
                         digits = 2), 
         insecure = moderately_insecure + severely_insecure) %>% 
  mutate_at(vars(moderately_insecure, 
                 severely_insecure, 
                 insecure), 
            ~ round(.x)) %>% 
  arrange(desc(insecure)) %>% 
  pivot_longer(cols = c(moderately_insecure, 
                        severely_insecure)) %>% 
 distinct(state, final_weight, pc, 
          secure, marginally_secure, 
          population, PIN, `%_PIN`, 
          insecure, name, value) %>% 
  
  filter(value > 0) %>% 
  ggplot(aes(y = value,
             x = fct_reorder(state, -insecure), 
             fill = fct_relevel(name, 
                                c( 
                                  "moderately_insecure", 
                                  "severely_insecure")))) + 
  geom_col(position = position_stack()) + 
  geom_text(aes(label = comma(value)),
            position = position_stack(vjust = .5),
            size = 2) + 
  scale_fill_manual(values = c( 
                               "#F57F17", 
                               "#BF360C")) + 
  scale_y_continuous(labels = comma) + 
  labs(fill = "", 
       x = "", 
       y = "Persons in need", 
       title = "People in need by state", 
       subtitle = "Combination of MSNA and FAO/WFP Round 3") +
  theme(legend.text = element_text(size = 5), 
        axis.text.x = element_text(angle = 60, 
                                   hjust = 1,
                                   vjust = 1))
```


<br><br><br>




## Township PINs

This section seeks to provide specific township PINs. To do this, we make use of the state/region PINs in the section above and divide up this state-level PIN across all the townships in that state. 

For reference, township-level prioritisation scores related to conflict (2022) and pre-existing vulnerability (2019) were developed in the food security cluster's paper on  [Township Prioritisation](https://food-security-cluster-myanmar.github.io/mmr_township_prioritisation/); please see there for more details. 

But in brief, the conflict score is a weighted average of the following indicators: 

* Number of IDPs
* Number of conflict fatalities
* Number of Battles
* Number of incidents of explosions and remote violence
* Number of incidents of violence against civilians
* Number of strategic developments (includes arrests)
* Number of non-peaceful protests and riots

And the multi-dimensional vulnerability score is an average of the following indicators, updated in 2019: 

* % of population without formal identification documents
* % of population without a middle school education
* % of females who were illiterate
* % of households with bamboo or thatched roofs
* % of households with safe sanitation
* % of households with access to electricity
* % of workers who are unpaid family workers
* The child dependency ratio

The caseload for each township would be either the number of persons affected by conflict or the number of persons who had pre-exisiting multi-dimensional vulnerability, depending on which figure is higher. These township caseloads were then used to determine each townships share of the state PIN. 

For instance, if township A had 20% of the caseload of the state, it should also be allocated 20% of the PIN. 

For review and validation, the remaining sections of this document break down the township-level PIN by state. It would be useful to speak to your field colleagues to see if the model developed is a fair approximation of needs. Preliminary validation has already been carried out with some food security partners to some encouraging results.

In the tables below, higher conflict scores are worse, with the highest possible conflict score being `100`. 

```{r}
states %>% glimpse()
```


```{r}
nat <- pin %>% 
  mutate(state = recode(state, 
                        "Bago (East)" = "Bago", 
                        "Bago (West)" = "Bago", 
                        "Shan (North)" = "Shan", 
                        "Shan (East)" = "Shan", 
                        "Shan (South)" = "Shan")) %>% 
  left_join(states %>%
              mutate(
                moderately_insecure = moderately_insecure / 100 * population,
                severely_insecure = severely_insecure / 100 * population,
                PIN = (moderately_insecure + severely_insecure),
                `%_PIN` = round(PIN / sum(PIN, na.rm = TRUE) * 100,
                                digits = 2),
                insecure = moderately_insecure + severely_insecure
              ) %>%
              mutate_at(vars(moderately_insecure,
                             severely_insecure,
                             insecure),
                        ~ round(.x)) %>%
              arrange(desc(insecure)) %>% 
              select(state, 
                     state_moderate = moderately_insecure, 
                     state_severe = severely_insecure, 
                     state_insecure = insecure), 
            by = "state") %>% 
  mutate_at(vars(conflict_score, mdp_adjust), 
            ~ range_wna(.x)) %>% 
  mutate(conflict_affected = conflict_score * population_2021_proj, 
         vulnerable = mdp_adjust * population_2021_proj) %>%
  replace_na(list(conflict_score = 0, vulnerable = 0))  %>% 
  group_by(state) %>% 
  mutate(caseload = pmax(conflict_affected, vulnerable), 
         # this is where the township calculations come into play
         pc_caseload = caseload / sum(caseload),
         pc_pop = population_2021_proj  / sum(population_2021_proj),
         tsp_moderate = state_moderate * pc_pop,
         tsp_severe = state_severe * pc_pop, 
         tsp_pin = state_insecure * pc_caseload) %>% 
  select(state, township, admin3_pcode, 
         `population 2021` = population_2021_proj, 
         conflict_score, mdp_adjust, 
         conflict_affected, 
         vulnerable, 
         caseload, 
         tsp_moderate, 
         tsp_severe, 
         tsp_pin) %>% 
  ungroup()
  

```

```{r}
glimpse(nat)
```

```{r}
nat %>% 
  mutate_at(vars(`population 2021`,  
                   conflict_affected, 
                   vulnerable, 
                   tsp_moderate, 
                   tsp_severe), 
               ~ round(.x, digits = 0)) %>% 
    mutate(pc_insecure = round((tsp_moderate + tsp_severe) / `population 2021` * 100,
                               digits = 2))
```


```{r}
nat_table <- function(tbl){
  tbl %>% 
     mutate_at(vars(`population 2021`,  
                   conflict_affected, 
                   vulnerable, 
                   tsp_moderate, 
                   tsp_severe), 
               ~ round(.x, digits = 0)) %>% 
    mutate(pc_insecure = round((tsp_moderate + tsp_severe) / `population 2021` * 100,
                               digits = 2)) %>% 
    select(township, 
         `population 2021`,
         `conflict score` = conflict_score, 
         `conflict affected` = conflict_affected, 
         `vulnerability score` = mdp_adjust, 
         `pre-ex. vulnerable` = vulnerable, 
         `moderately insecure` = tsp_moderate, 
         `severely insecure` = tsp_severe, 
         PIN = tsp_pin) %>%
    mutate(`%_PIN` = round(PIN / sum(PIN) * 100, 
                          digits = 2), 
           `conflict score` = round(`conflict score` * 100, 
                                    digits = 2), 
           `vulnerability score` = round(`vulnerability score` * 100,
                                         digits = 2)) %>% 
    arrange(desc(PIN)) %>% 
    adorn_totals("row") %>% 
    mutate(`%_PIN` = ifelse(`%_PIN` > 90 & `%_PIN` < 110, 
                            100, `%_PIN`)) %>% 
    flextable() %>% 
    set_caption("Proposed PIN breakdown by township") %>% 
    theme_zebra() %>% 
    fontsize(size = 10, part = "all")
}

```

<br><br>

### Ayeyarwady 

```{r}
nat %>%
  filter(state == "Ayeyarwady") %>%
  nat_table()

```

<br><br>

### Bago

Unfortunately, this is a combination of Bago East and West since the FAO/WFP survey was considered one entity inside their survey. 

<br>

```{r}
nat %>% 
  filter(state == "Bago") %>% 
  nat_table()
```

<br><br>

### Chin 

```{r}
nat %>% 
  filter(state == "Chin") %>% 
  nat_table()
```


<br><br>
 
### Kachin

```{r}
nat %>% 
  filter(state == "Kachin") %>% 
  nat_table()
```

<br><br>

### Kayah 

```{r}
nat %>% 
  filter(state == "Kayah") %>% 
  nat_table()

```

<br><br>

### Kayin

```{r}
nat %>% 
  filter(state == "Kayin") %>% 
  nat_table()
```


<br><br>

### Magway

```{r}
nat %>% 
  filter(state == "Magway") %>% 
  nat_table()
```

<br><br>

### Mandalay

According to the MSNA, Mandalay had no households which were moderately or severely food insecure and consequently, has been excluded from the PIN.

<br>

```{r}
nat %>% 
  filter(state == "Mandalay") %>% 
  nat_table()
```


<br><br>

### Mon

```{r}
nat %>% 
  filter(state == "Mon") %>% 
  nat_table()
```

<br><br>

### Nay Pyi Taw

Nay Pyi Taw has no targets and was not surveyed in the FAO/WFP survey or the MSNA. It was, however, included in IFPRI. 

However, Nay Pyi Taw has no targets as it is the capital and a Tatmadaw stronghold. Additionally, the government does not appreciate humanitarian interventions targeted at Nay Pyi Taw residents. 

```{r}
nat %>% 
  filter(state == "Nay Pyi Taw") %>% 
  nat_table()
```


<br><br>

### Rakhine

The high conflict score in Sittwe is primarily due to the massive presence of IDPs there. However, the oeveral PIN for Sittwe is brought down by the relatively lower proportions of the township that are food insecure. 

```{r}
nat %>% 
  filter(state == "Rakhine") %>% 
  nat_table()
```

<br><br>

### Sagaing

Sagaing is similar to Kayin in that, in the majority of townships, the numbers of conflict-affected persons are much higher the numbers of persons with pre-existing vulnerability. 

<br>


```{r}
nat %>% 
  filter(state == "Sagaing") %>% 
  nat_table()
```

<br>

This is the distributiuon of food consumption scores in Sagaing. There is a clear population in need on the left-hand side of the plot. 

<br>

```{r}
msna %>% filter(state == "sagaing") %>%
  ggplot(aes(x = fs_calculated_fcs)) + 
  geom_histogram(bins = 30) + 
  labs(title = "Distribution of food consumption scores in Sagaing")
```

<br><br>

### Shan 

Similar to Bago, the sampling of the FAO/WFP survey is insufficiently detailed to break down results acrros Shan North, Shan East and Shan South. Their townhips have all been combined into one long table below. 

<br>


```{r}
nat %>% 
  filter(state == "Shan") %>% 
  nat_table()
```


<br><br>

### Tnaintharyi

The high conflict score in Sittwe is primarily due to the massive presence of IDPs there. Together, Sittwe, 


```{r}
nat %>% 
  filter(state == "Tanintharyi") %>% 
  nat_table()
```


<br><br>

<br><br>

### Yangon

The calculated PIN for Yangon in 2023 is a modest 39,705 persons. This is completely in line with the worsening and more urgent needs in other parts of the country. It is also highly-suggested that urban programming, private-sector collaboration and market interventions be used in urban areas. 

<br>

```{r}
nat %>% 
  filter(state == "Yangon") %>% 
  nat_table()
```

<br><br>

### Limitations of the township PINs

So far, the prioritisation exercise has bee fairly agnostics about conflict vs. pre-existing vulnerability, counting the higher of the two figures as the caseload for each township. Were a strategic decision to be made to change to focus only to conflict-affected areas, then these allocations should shift substantially. 

```{r eval = FALSE}
nat %>% 
  rename(vulnerability_score = mdp_adjust) %>% 
  write_csv("./data/draft_pin_dataset.csv")
```

