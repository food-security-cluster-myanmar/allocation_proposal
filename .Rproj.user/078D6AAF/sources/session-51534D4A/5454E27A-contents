
mutate(state_moderate = case_when(
  state %in% c("Bago (West)", "Bago (East)") ~ 1133432, 
  state %in% c("Shan (North)", 
               "Shan (East)", 
               "Shan (South)") ~ 203729, 
  TRUE ~ state_moderate), 
  state_severe = case_when(
    state %in% c("Bago (West)", "Bago (East)") ~ 267769, 
    state %in% c("Shan (North)", 
                 "Shan (East)", 
                 "Shan (South)") ~ 94328, 
    TRUE ~ state_severe))


summarise(state_insecure = max(state_insecure), 
          tsp_pin = sum(tsp_pin), 
          state_severe = max(state_severe), 
          tsp_severe = sum(tsp_severe), 
          state_moderate = max(state_moderate), 
          tsp_moderate = sum(tsp_moderate))

# Don't know what i did wrong, but I'll just try again when i have more time
# For sure it's some random typo
states <- msna %>% 
  mutate(state = str_replace_all(state, "_", " "),
         state = str_remove_all(state, "east|west|north|south"), 
         state = str_trim(state),
         state = str_to_title(state)) %>% 
  mutate(status = case_when(fs_calculated_fcs <= 21 ~ "poor",
                            fs_calculated_fcs >=21.5 & fs_calculated_fcs <= 35 ~ "borderline", 
                            fs_calculated_fcs > 35 ~ "acceptable")) %>% 
  group_by(state, status) %>% 
  summarise(weight = sum(weights, na.rm = TRUE), 
            .groups = "drop") %>% 
  mutate(state = str_replace_all(state, "_", " "),
         state = str_remove_all(state, "east|west|north|south"), 
         state = str_trim(state),
         state = str_to_title(state)) %>% 
  left_join(survey %>%
              mutate(
                fcs_status = case_when(
                  hhfcs <= 21 ~ "poor",
                  hhfcs >= 21.5 &
                    hhfcs <= 35 ~ "borderline",
                  hhfcs > 35 ~ "acceptable"
                ),
                rcsi_status = ifelse(rcsi >= 4,
                                     "marginal", "secure")
              ) %>%
              group_by(adm_name, fcs_status, rcsi_status) %>%
              summarise(weights = sum(weight_final), 
                        .groups = "drop") %>%
              mutate(pc = weights / sum(weights)) %>%
              ungroup() %>%
              filter(fcs_status == "acceptable") %>%
              select(state = adm_name, rcsi_status, pc) %>%
              pivot_wider(names_from = rcsi_status,
                          values_from = pc),
            by = "state") %>% 
  mutate(marginal_weight = marginal * weight,
         secure_weight = secure * weight) %>% 
  pivot_longer(cols = c(marginal_weight, 
                        secure_weight)) %>% 
  mutate(final_weight = case_when(
    status == "acceptable" ~ value, 
    status == "borderline" ~ weight, 
    status == "poor" ~ weight
  )) %>%
  mutate(domain = case_when(
    status == "poor" ~ "severely_insecure", 
    status == "borderline" ~ "moderately_insecure", 
    status == "acceptable" & name == "marginal_weight" ~ "marginally_secure", 
    status == "acceptable" & name == "secure_weight" ~ "secure"
  ))  %>% 
  group_by(state, domain) %>% 
  summarise(final_weight = sum(final_weight), 
            .groups = "drop") %>% 
  filter(!is.na(domain)) %>% 
  group_by(state) %>% 
  mutate(state_pc = round(final_weight / sum(final_weight) * 100, 
                          digits = 2)) %>% 
  ungroup() %>% 
  pivot_wider(names_from = domain, 
              values_from = state_pc, 
              values_fill = 0)  %>% 
  group_by(state) %>% 
  summarise(final_weight = sum(final_weight), 
            secure = sum(secure, na.rm = TRUE), 
            marginally_secure = max(marginally_secure, na.rm = TRUE), 
            moderately_insecure = max(moderately_insecure, na.rm = TRUE), 
            severely_insecure = max(severely_insecure, na.rm = TRUE)) %>% 
  mutate(pc = round(final_weight / sum(final_weight, na.rm = TRUE) * 100, 
                    digits = 2))  %>% 
  relocate(pc, .after = final_weight) %>%  
  mutate(population = pc / 100 * 53431391.27, 
         PIN = ((moderately_insecure + severely_insecure) / 100) * population, 
         `%_PIN` = round(PIN / sum(PIN, na.rm = TRUE) * 100, 
                         digits = 2), 
         insecure = moderately_insecure + severely_insecure) %>% 
  mutate_at(vars(population, PIN), 
            ~ round(.x)) %>% 
  arrange(desc(insecure))


group_by(state, domain) %>%
  summarise(final_weight = sum(final_weight),
            .groups = "drop") %>%
  group_by(state) %>%
  mutate(state_pc = round(final_weight / sum(final_weight) * 100,
                          digits = 2)) %>%
  ungroup() %>%
  pivot_wider(names_from = domain,
              values_from = state_pc,
              values_fill = 0) %>%
  group_by(state) %>%
  summarise(
    final_weight = sum(final_weight),
    secure = max(secure, na.rm = TRUE),
    marginally_secure = max(marginally_secure, na.rm = TRUE),
    moderately_insecure = max(moderately_insecure, na.rm = TRUE),
    severely_insecure = max(severely_insecure, na.rm = TRUE)
  ) %>%
  
  msna %>%
  mutate(
    state = str_replace_all(state, "_", " "),
    state = str_remove_all(state, "east|west|north|south"),
    state = str_trim(state),
    state = str_to_title(state)
  ) %>%
  mutate(
    status = case_when(
      fs_calculated_fcs <= 21 ~ "poor",
      fs_calculated_fcs >= 21.5 &
        fs_calculated_fcs <= 35 ~ "borderline",
      fs_calculated_fcs > 35 ~ "acceptable"
    )
  ) %>%
  group_by(state, status) %>%
  summarise(weight = sum(weights, na.rm = TRUE),
            .groups = "drop") %>%
  mutate(
    state = str_replace_all(state, "_", " "),
    state = str_remove_all(state, "east|west|north|south"),
    state = str_trim(state),
    state = str_to_title(state)
  ) %>%
  left_join(
    survey %>%
      mutate(
        fcs_status = case_when(
          hhfcs <= 21 ~ "poor",
          hhfcs >= 21.5 & hhfcs <= 35 ~ "borderline",
          hhfcs > 35 ~ "acceptable"
        ),
        rcsi_status = ifelse(rcsi >= 4,
                             "marginal", "secure")
      ) %>%
      group_by(adm_name,
               fcs_status,
               rcsi_status) %>%
      summarise(weights = sum(weight_final),
                .groups = "drop") %>%
      mutate(pc = weights / sum(weights)) %>%
      ungroup() %>%
      filter(fcs_status == "acceptable") %>%
      select(state = adm_name, rcsi_status, pc) %>%
      pivot_wider(names_from = rcsi_status,
                  values_from = pc),
    by = "state"
  ) %>%
  mutate(marginal_weight = marginal * weight,
         secure_weight = secure * weight) %>%
  pivot_longer(cols = c(marginal_weight,
                        secure_weight)) %>%
  mutate(
    final_weight = case_when(
      status == "acceptable" ~ value,
      status == "borderline" ~ weight,
      status == "poor" ~ weight
    )
  ) %>%
  mutate(
    domain = case_when(
      status == "poor" ~ "severely_insecure",
      status == "borderline" ~ "moderately_insecure",
      status == "acceptable" &
        name == "marginal_weight" ~ "marginally_secure",
      status == "acceptable" & name == "secure_weight" ~ "secure"
    )
  ) %>%
  group_by(state, status,)


mutate(value =)
filter(!is.na(domain))
group_by(state, domain) %>%
  summarise(final_weight = sum(final_weight),
            .groups = "drop") %>%
  group_by(state) %>%
  mutate(state_pc = round(final_weight / sum(final_weight) * 100,
                          digits = 2)) %>%
  ungroup() %>%
  pivot_wider(names_from = domain,
              values_from = state_pc,
              values_fill = 0) %>%
  group_by(state) %>%
  summarise(
    final_weight = sum(final_weight),
    secure = max(secure, na.rm = TRUE),
    marginally_secure = max(marginally_secure, na.rm = TRUE),
    moderately_insecure = max(moderately_insecure, na.rm = TRUE),
    severely_insecure = max(severely_insecure, na.rm = TRUE)
  ) %>%
  mutate(pc = round(final_weight / sum(final_weight, na.rm = TRUE) * 100,
                    digits = 2))  %>%
  relocate(pc, .after = final_weight) %>%
  mutate(
    population = pc / 100 * 53431391.27,
    PIN = (moderately_insecure + severely_insecure) / 100 * population,
    `%_PIN` = round(PIN / sum(PIN, na.rm = TRUE) * 100,
                    digits = 2),
    insecure = moderately_insecure + severely_insecure
  ) %>%
  mutate_at(vars(population, PIN),
            ~ round(.x))

